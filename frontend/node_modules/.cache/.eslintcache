[{"/Users/marvinbautista/Desktop/hris/frontend/src/index.js":"1","/Users/marvinbautista/Desktop/hris/frontend/src/App.js":"2","/Users/marvinbautista/Desktop/hris/frontend/src/reportWebVitals.js":"3","/Users/marvinbautista/Desktop/hris/frontend/src/pages/Login.jsx":"4","/Users/marvinbautista/Desktop/hris/frontend/src/pages/PendingLeaves.jsx":"5","/Users/marvinbautista/Desktop/hris/frontend/src/pages/Dashboard.jsx":"6","/Users/marvinbautista/Desktop/hris/frontend/src/pages/FileLeave.jsx":"7","/Users/marvinbautista/Desktop/hris/frontend/src/pages/AddCompany.jsx":"8","/Users/marvinbautista/Desktop/hris/frontend/src/pages/EmployeeProfile.jsx":"9","/Users/marvinbautista/Desktop/hris/frontend/src/pages/admin/UserLogs.jsx":"10","/Users/marvinbautista/Desktop/hris/frontend/src/pages/admin/EmployeesList.jsx":"11","/Users/marvinbautista/Desktop/hris/frontend/src/pages/widgets/WidgetPending.jsx":"12","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/Announcements.jsx":"13","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRDashboard.jsx":"14","/Users/marvinbautista/Desktop/hris/frontend/src/pages/admin/AddEmployee.jsx":"15","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/AddAnnouncements.jsx":"16","/Users/marvinbautista/Desktop/hris/frontend/src/pages/admin/AdminDashboard.jsx":"17","/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/LeadDashboard.jsx":"18","/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/LeadPTORequests.jsx":"19","/Users/marvinbautista/Desktop/hris/frontend/src/pages/client/ClientDashboard.jsx":"20","/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRSideBar.jsx":"21","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBGreeting.jsx":"22","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBButtons.jsx":"23","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBAnniversaries.jsx":"24","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBBirthdays.jsx":"25","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBRemainingOffset.jsx":"26","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBOwnPTO.jsx":"27","/Users/marvinbautista/Desktop/hris/frontend/src/components/manager/ManagerSideBar.jsx":"28","/Users/marvinbautista/Desktop/hris/frontend/src/components/manager/ManagerPTONotices.jsx":"29","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBPTONotices.jsx":"30","/Users/marvinbautista/Desktop/hris/frontend/src/components/client/ClientSideBar.jsx":"31","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBRemainingPTO.jsx":"32","/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRNumOfEmployees.jsx":"33","/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRNotices.jsx":"34","/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRPTONotices.jsx":"35","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/EmployeeListComponent.jsx":"36","/Users/marvinbautista/Desktop/hris/frontend/src/pages/client/ClientUserProfile.jsx":"37","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/Profile.jsx":"38","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRProfile.jsx":"39","/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/ManagerProfile.jsx":"40","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/AddEmployee.jsx":"41","/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRFormAddEmployee.jsx":"42","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBPTOApprovedAndOwned.jsx":"43","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/ViewEmployee.jsx":"44","/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRFormViewEmployee.jsx":"45","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/SideBarProfile.jsx":"46","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/ButtonBack.jsx":"47","/Users/marvinbautista/Desktop/hris/frontend/src/components/manager/ManagerPTORequestTableLimited.jsx":"48","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/Headings.jsx":"49","/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/LeadDirectory.jsx":"50","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/EmployeeDirectoryCard.jsx":"51","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/EditEmployee.jsx":"52","/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRFormEditEmployee.jsx":"53","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/EmployeeDirectoryComponent.jsx":"54","/Users/marvinbautista/Desktop/hris/frontend/src/pages/client/ClientEmployeeDirectory.jsx":"55","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRDirectory.jsx":"56","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBNumofLeavesToday.jsx":"57","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRManage.jsx":"58","/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRManageHoliday.jsx":"59","/Users/marvinbautista/Desktop/hris/frontend/src/pages/client/ClientAnnouncements.jsx":"60","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/BuildingComponent.jsx":"61","/Users/marvinbautista/Desktop/hris/frontend/src/pages/client/ClientAttendance.jsx":"62","/Users/marvinbautista/Desktop/hris/frontend/src/pages/client/ClientTraining.jsx":"63","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRAnnouncements.jsx":"64","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRAttendance.jsx":"65","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRTraining.jsx":"66","/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/LeadAnnouncements.jsx":"67","/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/LeadAttendance.jsx":"68","/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/LeadTraining.jsx":"69","/Users/marvinbautista/Desktop/hris/frontend/src/pages/ForgotPassword.jsx":"70","/Users/marvinbautista/Desktop/hris/frontend/src/pages/ResetPasword.jsx":"71"},{"size":535,"mtime":1701756495477,"results":"72","hashOfConfig":"73"},{"size":5361,"mtime":1703129584823,"results":"74","hashOfConfig":"73"},{"size":362,"mtime":1701756495479,"results":"75","hashOfConfig":"73"},{"size":6447,"mtime":1703063894378,"results":"76","hashOfConfig":"73"},{"size":3168,"mtime":1701756495478,"results":"77","hashOfConfig":"73"},{"size":1395,"mtime":1701756495478,"results":"78","hashOfConfig":"73"},{"size":2167,"mtime":1701756495478,"results":"79","hashOfConfig":"73"},{"size":686,"mtime":1701756495478,"results":"80","hashOfConfig":"73"},{"size":500,"mtime":1701756495478,"results":"81","hashOfConfig":"73"},{"size":183,"mtime":1701756495478,"results":"82","hashOfConfig":"73"},{"size":12253,"mtime":1702541409263,"results":"83","hashOfConfig":"73"},{"size":1913,"mtime":1701756495479,"results":"84","hashOfConfig":"73"},{"size":1975,"mtime":1701756495479,"results":"85","hashOfConfig":"73"},{"size":2890,"mtime":1703059077598,"results":"86","hashOfConfig":"73"},{"size":2681,"mtime":1701756495478,"results":"87","hashOfConfig":"73"},{"size":549,"mtime":1701756495479,"results":"88","hashOfConfig":"73"},{"size":16213,"mtime":1701756495478,"results":"89","hashOfConfig":"73"},{"size":2065,"mtime":1703059086903,"results":"90","hashOfConfig":"73"},{"size":7331,"mtime":1702609850999,"results":"91","hashOfConfig":"73"},{"size":3951,"mtime":1703059066727,"results":"92","hashOfConfig":"73"},{"size":13430,"mtime":1703062230216,"results":"93","hashOfConfig":"73"},{"size":1337,"mtime":1701756683605,"results":"94","hashOfConfig":"73"},{"size":14382,"mtime":1703058911968,"results":"95","hashOfConfig":"73"},{"size":1426,"mtime":1702349364490,"results":"96","hashOfConfig":"73"},{"size":1564,"mtime":1702349384602,"results":"97","hashOfConfig":"73"},{"size":974,"mtime":1701756495477,"results":"98","hashOfConfig":"73"},{"size":5840,"mtime":1702867756050,"results":"99","hashOfConfig":"73"},{"size":11795,"mtime":1703063156759,"results":"100","hashOfConfig":"73"},{"size":11677,"mtime":1702609109926,"results":"101","hashOfConfig":"73"},{"size":1723,"mtime":1701932062019,"results":"102","hashOfConfig":"73"},{"size":11204,"mtime":1703061225597,"results":"103","hashOfConfig":"73"},{"size":1990,"mtime":1702955088754,"results":"104","hashOfConfig":"73"},{"size":3191,"mtime":1702952789423,"results":"105","hashOfConfig":"73"},{"size":610,"mtime":1702362731416,"results":"106","hashOfConfig":"73"},{"size":7668,"mtime":1702545545467,"results":"107","hashOfConfig":"73"},{"size":2833,"mtime":1702541409259,"results":"108","hashOfConfig":"73"},{"size":323,"mtime":1703057831211,"results":"109","hashOfConfig":"73"},{"size":13348,"mtime":1703058789637,"results":"110","hashOfConfig":"73"},{"size":297,"mtime":1701929786527,"results":"111","hashOfConfig":"73"},{"size":331,"mtime":1701938513492,"results":"112","hashOfConfig":"73"},{"size":301,"mtime":1702434039506,"results":"113","hashOfConfig":"73"},{"size":26975,"mtime":1702884508706,"results":"114","hashOfConfig":"73"},{"size":6280,"mtime":1702867923973,"results":"115","hashOfConfig":"73"},{"size":327,"mtime":1702434039506,"results":"116","hashOfConfig":"73"},{"size":13092,"mtime":1702979509703,"results":"117","hashOfConfig":"73"},{"size":3156,"mtime":1702979509706,"results":"118","hashOfConfig":"73"},{"size":760,"mtime":1702448287511,"results":"119","hashOfConfig":"73"},{"size":7708,"mtime":1702609078971,"results":"120","hashOfConfig":"73"},{"size":192,"mtime":1702962553089,"results":"121","hashOfConfig":"73"},{"size":466,"mtime":1703058846683,"results":"122","hashOfConfig":"73"},{"size":2186,"mtime":1703054148154,"results":"123","hashOfConfig":"73"},{"size":338,"mtime":1702884508708,"results":"124","hashOfConfig":"73"},{"size":29925,"mtime":1702979509703,"results":"125","hashOfConfig":"73"},{"size":2578,"mtime":1703058875509,"results":"126","hashOfConfig":"73"},{"size":435,"mtime":1703040973590,"results":"127","hashOfConfig":"73"},{"size":453,"mtime":1703040986860,"results":"128","hashOfConfig":"73"},{"size":1113,"mtime":1702983374627,"results":"129","hashOfConfig":"73"},{"size":497,"mtime":1702976317756,"results":"130","hashOfConfig":"73"},{"size":4340,"mtime":1703058911967,"results":"131","hashOfConfig":"73"},{"size":564,"mtime":1703060940476,"results":"132","hashOfConfig":"73"},{"size":431,"mtime":1703060794739,"results":"133","hashOfConfig":"73"},{"size":557,"mtime":1703060988401,"results":"134","hashOfConfig":"73"},{"size":552,"mtime":1703061153694,"results":"135","hashOfConfig":"73"},{"size":536,"mtime":1703061808335,"results":"136","hashOfConfig":"73"},{"size":529,"mtime":1703061997353,"results":"137","hashOfConfig":"73"},{"size":523,"mtime":1703062131126,"results":"138","hashOfConfig":"73"},{"size":564,"mtime":1703062699091,"results":"139","hashOfConfig":"73"},{"size":555,"mtime":1703062895367,"results":"140","hashOfConfig":"73"},{"size":549,"mtime":1703063093626,"results":"141","hashOfConfig":"73"},{"size":1796,"mtime":1703141780950,"results":"142","hashOfConfig":"73"},{"size":2875,"mtime":1703141837929,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},"1dmigqp",{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"147"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"147"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"147"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"147"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"147"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"147"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"147"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"147"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"147"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"147"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"147"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"147"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"147"},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"147"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"147"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"147"},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"147"},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"147"},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/marvinbautista/Desktop/hris/frontend/src/index.js",[],[],["380"],"/Users/marvinbautista/Desktop/hris/frontend/src/App.js",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/reportWebVitals.js",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/Login.jsx",["381"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/PendingLeaves.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/Dashboard.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/FileLeave.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/AddCompany.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/EmployeeProfile.jsx",["382","383","384","385"],[],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst EmployeeProfile = () => {\n    const [emp_id, setEmp_ID] = useState(\"\")\n\n    emp_id = 1;\n\n    const fetchEmployee = () => {\n        axios.post(\"http://localhost:6197/employeeProfile\", {\n            emp_id: emp_id,\n        }).then((response) => {\n            console.log(response);\n        });\n    }\n\n    return (\n        <div>\n            <h1>Employee Profile</h1>\n        </div>\n    )\n}\n\nexport default EmployeeProfile","/Users/marvinbautista/Desktop/hris/frontend/src/pages/admin/UserLogs.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/admin/EmployeesList.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/widgets/WidgetPending.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/Announcements.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRDashboard.jsx",["386","387","388","389","390","391"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/admin/AddEmployee.jsx",["392"],[],"import React, {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\"\n\nconst AddEmployee = () => {\n\n    const navigate = useNavigate()\n\n    const [employee, setEmployee] = useState({\n        user_id: \"\", \n        work_email: \"\",\n        f_name: \"\", \n        m_name: \"\", \n        s_name: \"\", \n        personal_email: \"\", \n        contact_num: 0, \n        dob: \"\", \n        p_address: \"\", \n        c_address: \"\", \n        date_hired: \"\", \n        sex: \"\", \n        created_by: \"\", \n        updated_by: \"\",\n    });\n\n    const handleChange = (e) => {\n        setEmployee((prev) => ({ ...prev, [e.target.name]: e.target.value}));\n    }\n\n    const handleClick = async e => {\n        e.preventDefault()\n        try{\n            await axios.post(\"http://localhost:6197/addEmployee\", employee)\n\n        } catch(err){\n            console.log(err)\n        }\n    }\n\n    return(\n        <div>\n            <h1>Add New Employee</h1>\n            <br/><br/><br/><br/>\n            <h4>User ID</h4>\n            <input type=\"number\" placeholder=\"user_id\" onChange={handleChange} name=\"user_id\"/>\n            <h4>Email Address</h4>\n            <input type=\"email\" placeholder=\"work_email\" onChange={handleChange} name=\"work_email\"/>\n            <br/><br/><br/>\n            <h4>Name</h4>\n            <input type=\"textr\" placeholder=\"f_name\" onChange={handleChange} name=\"f_name\"/>\n            <input type=\"text\" placeholder=\"m_name\" onChange={handleChange} name=\"m_name\"/>\n            <input type=\"text\" placeholder=\"s_name\" onChange={handleChange} name=\"s_name\"/>\n\n            <h4>Personal Email</h4>\n            <input type=\"email\" placeholder=\"personal_email\" onChange={handleChange} name=\"personal_email\"/>\n            <h4>Contact Number</h4>\n            <input type=\"text\" placeholder=\"contact_num\" onChange={handleChange} name=\"contact_num\"/>\n            <h4>Date of Birth</h4>\n            <input type=\"date\" placeholder=\"dob\" onChange={handleChange} name=\"dob\"/>\n            \n            <h4>Permanent Address</h4>\n            <input type=\"text\" placeholder=\"p_address\" onChange={handleChange} name=\"p_address\"/>\n            <h4>Current Address</h4>\n            <input type=\"text\" placeholder=\"c_address\" onChange={handleChange} name=\"c_address\"/>\n            \n            <h4>Date Hired</h4>\n            <input type=\"date\" placeholder=\"date_hired\" onChange={handleChange} name=\"date_hired\"/>\n            <h4>Sex</h4>\n            <input type=\"text\" placeholder=\"sex\" onChange={handleChange} name=\"sex\"/>\n\n            <br/><br/><br/><br/>\n\n            <button onClick={handleClick}>Add New User</button>\n        </div> \n    ) \n}\n\nexport default AddEmployee",["393"],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/AddAnnouncements.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/admin/AdminDashboard.jsx",["394","395","396","397","398","399","400","401","402","403","404","405"],[],"import React, {useState, useEffect} from \"react\";\nimport { useNavigate, L } from \"react-router-dom\"\nimport Axios from \"axios\"\n\nconst AdminDashboard = () => {\n    const navigate = useNavigate()\n\n   useEffect(() => {\n      Axios.get(\"http://localhost:6197/login\").then((response) => {\n         if (response.data.loggedIn == false) {\n            navigate(\"/login\")\n         }\n      })\n   }, [])\n\n   const logoutEmployee = () => {\n        Axios({method: \"post\", url: \"http://localhost:6197/logout\", withcredentials: true}).then((response) => {\n        console.log(\"response status\", response)\n\n        if (response.status === 200) {\n            // setcount(\"login\")\n        }\n    })\n    }\n\n\n    return (\n        <div>Admin Dashboard\n<button data-drawer-target=\"default-sidebar\" data-drawer-toggle=\"default-sidebar\" aria-controls=\"default-sidebar\" type=\"button\" class=\"inline-flex items-center p-2 mt-2 ml-3 text-sm text-gray-500 rounded-lg sm:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600\">\n   <span class=\"sr-only\">Open sidebar</span>\n   <svg class=\"w-6 h-6\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path clip-rule=\"evenodd\" fill-rule=\"evenodd\" d=\"M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z\"></path>\n   </svg>\n</button>\n\n<aside id=\"default-sidebar\" class=\"fixed top-0 left-0 z-40 w-64 h-screen transition-transform -translate-x-full sm:translate-x-0\" aria-label=\"Sidebar\">\n   <div class=\"h-full px-3 py-4 overflow-y-auto bg-gray-50 dark:bg-gray-800\">\n      <ul class=\"space-y-2 font-medium\">\n\n        <li>\n            <a href=\"#\" class=\"flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group\">\n               <svg class=\"w-5 h-5 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 22 21\">\n                  <path d=\"M16.975 11H10V4.025a1 1 0 0 0-1.066-.998 8.5 8.5 0 1 0 9.039 9.039.999.999 0 0 0-1-1.066h.002Z\"/>\n                  <path d=\"M12.5 0c-.157 0-.311.01-.565.027A1 1 0 0 0 11 1.02V10h8.975a1 1 0 0 0 1-.935c.013-.188.028-.374.028-.565A8.51 8.51 0 0 0 12.5 0Z\"/>\n               </svg>\n               <span class=\"ml-3\">Profile</span>\n            </a>\n         </li>\n\n         <br/> <br/> <br/> <br/> <br/>\n\n         <li>\n            <a href=\"#\" class=\"flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group\">\n               <svg class=\"w-5 h-5 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 22 21\">\n                  <path d=\"M16.975 11H10V4.025a1 1 0 0 0-1.066-.998 8.5 8.5 0 1 0 9.039 9.039.999.999 0 0 0-1-1.066h.002Z\"/>\n                  <path d=\"M12.5 0c-.157 0-.311.01-.565.027A1 1 0 0 0 11 1.02V10h8.975a1 1 0 0 0 1-.935c.013-.188.028-.374.028-.565A8.51 8.51 0 0 0 12.5 0Z\"/>\n               </svg>\n               <span class=\"ml-3\">Dashboard</span>\n            </a>\n         </li>\n         <li>\n            <a href=\"#\" class=\"flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group\">\n               <svg class=\"flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 18 18\">\n                  <path d=\"M6.143 0H1.857A1.857 1.857 0 0 0 0 1.857v4.286C0 7.169.831 8 1.857 8h4.286A1.857 1.857 0 0 0 8 6.143V1.857A1.857 1.857 0 0 0 6.143 0Zm10 0h-4.286A1.857 1.857 0 0 0 10 1.857v4.286C10 7.169 10.831 8 11.857 8h4.286A1.857 1.857 0 0 0 18 6.143V1.857A1.857 1.857 0 0 0 16.143 0Zm-10 10H1.857A1.857 1.857 0 0 0 0 11.857v4.286C0 17.169.831 18 1.857 18h4.286A1.857 1.857 0 0 0 8 16.143v-4.286A1.857 1.857 0 0 0 6.143 10Zm10 0h-4.286A1.857 1.857 0 0 0 10 11.857v4.286c0 1.026.831 1.857 1.857 1.857h4.286A1.857 1.857 0 0 0 18 16.143v-4.286A1.857 1.857 0 0 0 16.143 10Z\"/>\n               </svg>\n               <span class=\"flex-1 ml-3 whitespace-nowrap\">Announcements</span>\n               <span class=\"inline-flex items-center justify-center px-2 ml-3 text-sm font-medium text-gray-800 bg-gray-100 rounded-full dark:bg-gray-700 dark:text-gray-300\"></span>\n            </a>\n         </li>\n         <li>\n            <a href=\"#\" class=\"flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group\">\n               <svg class=\"flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"m17.418 3.623-.018-.008a6.713 6.713 0 0 0-2.4-.569V2h1a1 1 0 1 0 0-2h-2a1 1 0 0 0-1 1v2H9.89A6.977 6.977 0 0 1 12 8v5h-2V8A5 5 0 1 0 0 8v6a1 1 0 0 0 1 1h8v4a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-4h6a1 1 0 0 0 1-1V8a5 5 0 0 0-2.582-4.377ZM6 12H4a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2Z\"/>\n               </svg>\n               <span class=\"flex-1 ml-3 whitespace-nowrap\">Attendance</span>\n               <span class=\"inline-flex items-center justify-center w-3 h-3 p-3 ml-3 text-sm font-medium text-blue-800 bg-blue-100 rounded-full dark:bg-blue-900 dark:text-blue-300\"></span>\n            </a>\n         </li>\n         <li>\n            <a href=\"#\" class=\"flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group\">\n               <svg class=\"flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 18\">\n                  <path d=\"M14 2a3.963 3.963 0 0 0-1.4.267 6.439 6.439 0 0 1-1.331 6.638A4 4 0 1 0 14 2Zm1 9h-1.264A6.957 6.957 0 0 1 15 15v2a2.97 2.97 0 0 1-.184 1H19a1 1 0 0 0 1-1v-1a5.006 5.006 0 0 0-5-5ZM6.5 9a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9ZM8 10H5a5.006 5.006 0 0 0-5 5v2a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1v-2a5.006 5.006 0 0 0-5-5Z\"/>\n               </svg>\n               <span class=\"flex-1 ml-3 whitespace-nowrap\">Training</span>\n            </a>\n         </li>\n         <li>\n            <a href=\"#\" class=\"flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group\">\n               <svg class=\"flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 18 20\">\n                  <path d=\"M17 5.923A1 1 0 0 0 16 5h-3V4a4 4 0 1 0-8 0v1H2a1 1 0 0 0-1 .923L.086 17.846A2 2 0 0 0 2.08 20h13.84a2 2 0 0 0 1.994-2.153L17 5.923ZM7 9a1 1 0 0 1-2 0V7h2v2Zm0-5a2 2 0 1 1 4 0v1H7V4Zm6 5a1 1 0 1 1-2 0V7h2v2Z\"/>\n               </svg>\n               <span class=\"flex-1 ml-3 whitespace-nowrap\">Directory</span>\n            </a>\n         </li>\n         <li>\n            <a href=\"#\" class=\"flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group\">\n               <svg class=\"flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 16\">\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M1 8h11m0 0L8 4m4 4-4 4m4-11h3a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-3\"/>\n               </svg>\n               <span class=\"flex-1 ml-3 whitespace-nowrap\">Logs</span>\n            </a>\n         </li>\n         <li>\n            <a href=\"#\" class=\"flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 group\">\n               <svg class=\"flex-shrink-0 w-5 h-5 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M5 5V.13a2.96 2.96 0 0 0-1.293.749L.879 3.707A2.96 2.96 0 0 0 .13 5H5Z\"/>\n                  <path d=\"M6.737 11.061a2.961 2.961 0 0 1 .81-1.515l6.117-6.116A4.839 4.839 0 0 1 16 2.141V2a1.97 1.97 0 0 0-1.933-2H7v5a2 2 0 0 1-2 2H0v11a1.969 1.969 0 0 0 1.933 2h12.134A1.97 1.97 0 0 0 16 18v-3.093l-1.546 1.546c-.413.413-.94.695-1.513.81l-3.4.679a2.947 2.947 0 0 1-1.85-.227 2.96 2.96 0 0 1-1.635-3.257l.681-3.397Z\"/>\n                  <path d=\"M8.961 16a.93.93 0 0 0 .189-.019l3.4-.679a.961.961 0 0 0 .49-.263l6.118-6.117a2.884 2.884 0 0 0-4.079-4.078l-6.117 6.117a.96.96 0 0 0-.263.491l-.679 3.4A.961.961 0 0 0 8.961 16Zm7.477-9.8a.958.958 0 0 1 .68-.281.961.961 0 0 1 .682 1.644l-.315.315-1.36-1.36.313-.318Zm-5.911 5.911 4.236-4.236 1.359 1.359-4.236 4.237-1.7.339.341-1.699Z\"/>\n               </svg>\n               <br/> <br/> <br/>\n               <span class=\"flex-1 ml-3 whitespace-nowrap\">Logout</span>\n            </a>\n         </li>\n      </ul>\n   </div>\n</aside>\n\n<div class=\"p-4 sm:ml-64\">\n   <div class=\"p-4 border-2 border-gray-200 border-dashed rounded-lg dark:border-gray-700\">\n      <div class=\"grid grid-cols-3 gap-4 mb-4\">\n         <div class=\"flex items-center justify-center h-24 rounded bg-gray-50 dark:bg-gray-800\">\n            <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n               <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n               </svg>\n            </p>\n         </div>\n         <div class=\"flex items-center justify-center h-24 rounded bg-gray-50 dark:bg-gray-800\">\n            <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n               <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n               </svg>\n            </p>\n         </div>\n         <div class=\"flex items-center justify-center h-24 rounded bg-gray-50 dark:bg-gray-800\">\n            <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n               <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n               </svg>\n            </p>\n         </div>\n      </div>\n      <div class=\"flex items-center justify-center h-48 mb-4 rounded bg-gray-50 dark:bg-gray-800\">\n         <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n            <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n               <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n            </svg>\n         </p>\n      </div>\n      <div class=\"grid grid-cols-2 gap-4 mb-4\">\n         <div class=\"flex items-center justify-center rounded bg-gray-50 h-28 dark:bg-gray-800\">\n            <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n               <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n               </svg>\n            </p>\n         </div>\n         <div class=\"flex items-center justify-center rounded bg-gray-50 h-28 dark:bg-gray-800\">\n            <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n               <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n               </svg>\n            </p>\n         </div>\n         <div class=\"flex items-center justify-center rounded bg-gray-50 h-28 dark:bg-gray-800\">\n            <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n               <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n               </svg>\n            </p>\n         </div>\n         <div class=\"flex items-center justify-center rounded bg-gray-50 h-28 dark:bg-gray-800\">\n            <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n               <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n               </svg>\n            </p>\n         </div>\n      </div>\n      <div class=\"flex items-center justify-center h-48 mb-4 rounded bg-gray-50 dark:bg-gray-800\">\n         <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n            <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n               <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n            </svg>\n         </p>\n      </div>\n      <div class=\"grid grid-cols-2 gap-4\">\n         <div class=\"flex items-center justify-center rounded bg-gray-50 h-28 dark:bg-gray-800\">\n            <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n               <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n               </svg>\n            </p>\n         </div>\n         <div class=\"flex items-center justify-center rounded bg-gray-50 h-28 dark:bg-gray-800\">\n            <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n               <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n               </svg>\n            </p>\n         </div>\n         <div class=\"flex items-center justify-center rounded bg-gray-50 h-28 dark:bg-gray-800\">\n            <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n               <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n               </svg>\n            </p>\n         </div>\n         <div class=\"flex items-center justify-center rounded bg-gray-50 h-28 dark:bg-gray-800\">\n            <p class=\"text-2xl text-gray-400 dark:text-gray-500\">\n               <svg class=\"w-3.5 h-3.5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 18 18\">\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 1v16M1 9h16\"/>\n               </svg>\n            </p>\n         </div>\n      </div>\n   </div>\n</div>\n            <div className=\"logout-div\">\n                <button onClick={ logoutEmployee } >Logout</button>\n            </div>\n\n        </div> \n    )\n}\n\nexport default AdminDashboard","/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/LeadDashboard.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/LeadPTORequests.jsx",["406","407","408","409","410","411","412","413"],[],"import React, { useState, useEffect } from \"react\";\nimport ManagerSideBar from \"../../components/manager/ManagerSideBar\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport DataTable from \"react-data-table-component\";\nimport Headings from \"../../components/universal/Headings\";\n\nconst LeadPTORequests = () => {\n  const [leaves, setPendingLeaves] = useState([]);\n\n  useEffect(() => {\n    const fetchAllPendingLeaves = async () => {\n      try {\n        const res = await axios.get(\n          \"http://localhost:6197/showpendingdepartmentleaves\"\n        );\n        setPendingLeaves(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchAllPendingLeaves();\n  }, []);\n\n  const handleApproval = async (leave_id) => {\n    try {\n      await axios.post(\"http://localhost:6197/approveleave/\" + leave_id);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleRejection = async (leave_id) => {\n    try {\n      await axios.post(\"http://localhost:6197/rejectleave/\" + leave_id);\n      await axios.post(\"http://localhost:6197/returnTempPTO/\" + leave_id);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  function checkStatus(status) {\n    if (status == 0) {\n      return <div className=\"badge badge-warning text-xs\">Pending</div>;\n    }\n    if (status == 1) {\n      return <div className=\"badge badge-success\">Approved</div>;\n    }\n    if (status == 2) {\n      return <div className=\"badge badge-error text-white\">Declined</div>;\n    }\n  }\n\n  const columns = [\n    {\n      name: \"Date filed\",\n      selector: (row) => moment(row.date_filed).format(\"MMMM DD, YYYY\"),\n      sortable: true,\n    },\n\n    {\n      name: \"Name\",\n      selector: (row) => row.s_name + \", \" + row.f_name + \" \" + row.m_name,\n    },\n\n    {\n      name: \"PTO type\",\n      selector: (row) => row.leave_type,\n    },\n\n    {\n      name: \"Date(s)\",\n      selector: (row) =>\n        row.leave_from === row.leave_to\n          ? moment(row.leave_from).format(\"MMMM DD, YYYY\")\n          : moment(row.leave_from).format(\"MMMM DD, YYYY\") +\n            \"  to  \" +\n            moment(row.leave_to).format(\"MMMM DD, YYYY\"),\n    },\n\n    {\n      name: \"Actions\",\n      selector: (row) => (\n        <div className=\"flex flex-row justify-center flex-wrap gap-1\">\n          <button\n            className=\"btn btn-ghost-active btn-xs normal-case\"\n            onClick={() => document.getElementById(row.leave_id).showModal()}\n          >\n            Details\n          </button>\n\n          {/* Modal - Details */}\n          <dialog id={row.leave_id} className=\"modal text-left\">\n            <div className=\"modal-box\">\n              <form method=\"dialog\">\n                <button className=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">\n                  ✕\n                </button>\n              </form>\n\n              <h3 className=\"font-bold text-lg mb-5\">PTO Details</h3>\n\n              <div className=\"flex flex-col justify-center items-center\">\n                {row.emp_pic == \"\" || row.emp_pic == null ? (\n                  <div className=\"h-24 w-24 bg-gray-500 rounded-full flex justify-center items-center text-4xl text-white font-medium m-2\">\n                    {row.f_name.charAt(0) + row.s_name.charAt(0)}\n                  </div>\n                ) : (\n                  <img className=\"h-16 w-16 rounded-full m-2\" />\n                )}\n\n                <div className=\"text-center mb-7\">\n                  <h3 className=\"font-bold text-lg text-center\">\n                    {row.s_name + \", \" + row.f_name + \" \" + row.m_name}\n                  </h3>\n                  <span>{row.title}</span>\n                </div>\n\n                <div className=\"text-center\">\n                  <h3 className=\"font-semibold text-xl\">{row.leave_type}</h3>\n                  <h3 className=\"text-gray-600\">\n                    {row.leave_from === row.leave_to\n                      ? moment(row.leave_from).format(\"MMM. DD, YYYY\")\n                      : moment(row.leave_from).format(\"MMM. DD, YYYY\") +\n                        \"  to  \" +\n                        moment(row.leave_to).format(\"MMM. DD, YYYY\")}\n                  </h3>\n                </div>\n\n                <div className=\"mt-7 flex flex-col items-center gap-2\">\n                  <h3 className=\"italic text-gray-600\">\n                    Filed on {moment(row.date_filed).format(\"dddd\")} •{\" \"}\n                    {moment(row.date_filed).format(\"MMMM DD, YYYY\")}\n                  </h3>\n                  <div>{checkStatus(row.leave_status)}</div>\n                </div>\n              </div>\n\n              <div>\n                <h1 className=\"font-semibold mt-5\">Reason:</h1>\n\n                <div className=\"max-h-44 whitespace-normal\">\n                  <p className=\"justify-center text-justify\">\n                    {row.leave_reason == \"\" || row.leave_reason == null ? (\n                      <p className=\"italic text-gray-600\">\n                        No reason indicated.\n                      </p>\n                    ) : (\n                      <p>{row.leave_reason}</p>\n                    )}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end gap-2 mt-5\">\n                <button\n                  className=\"btn bg-green-600 text-white hover:bg-green-800 normal-case\"\n                  onClick={() => handleApproval(row.leave_id)}\n                >\n                  Approve\n                </button>\n                <button\n                  className=\"btn bg-red-600 text-white hover:bg-red-800 normal-case\"\n                  onClick={() => handleRejection(row.leave_id)}\n                >\n                  Decline\n                </button>\n              </div>\n            </div>\n          </dialog>\n\n          <button\n            className=\"btn btn-xs bg-lime-600 text-white hover:bg-green-800 normal-case\"\n            onClick={() => handleApproval(row.leave_id)}\n          >\n            Approve\n          </button>\n\n          <button\n            className=\"btn btn-xs bg-red-600 text-white hover:bg-red-800 normal-case\"\n            onClick={() => handleRejection(row.leave_id)}\n          >\n            Decline\n          </button>\n        </div>\n      ),\n    },\n  ];\n\n  if (leaves.length != 0) {\n    return (\n      <>\n        <ManagerSideBar></ManagerSideBar>\n\n        <div className=\"p-4 sm:ml-64 flex flex-col md:mt-20\">\n          <Headings text={\"PTO Requests\"} />\n\n          <div className=\"m-6\">\n            <DataTable\n              columns={columns}\n              data={leaves}\n              highlightOnHover\n              pagination\n            />\n          </div>\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <ManagerSideBar></ManagerSideBar>\n\n        <div className=\"p-4 sm:ml-64 flex flex-col md:mt-20\">\n          <Headings text={\"PTO Requests\"} />\n\n          <div className=\"flex flex-col justify-center align-middle mt-20\">\n            <div className=\"flex flex-col items-center justify-center gap-4\">\n              <img src={\"./svgs/lead_empty.svg\"} className=\"h-36 md:h-56\"></img>\n\n              <h2 className=\"font-semibold mt-4\">No pending PTOs yet.</h2>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default LeadPTORequests;\n","/Users/marvinbautista/Desktop/hris/frontend/src/pages/client/ClientDashboard.jsx",["414","415","416","417","418"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRSideBar.jsx",["419","420","421","422","423","424","425","426","427","428"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBGreeting.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBButtons.jsx",["429","430","431","432"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBAnniversaries.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBBirthdays.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBRemainingOffset.jsx",["433","434","435"],[],"import React, { useState, useEffect } from \"react\";\nconst DashBRemainingOffset = () => {\n  return (\n    <>\n      {/* Remaining Offset Time */}\n      <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col items-center justify-center text-center\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth=\"1.5\"\n          stroke=\"currentColor\"\n          className=\"mb-2 w-10 h-10\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n\n        <h1 className=\"text-lg font-semibold\">Remaining Offset Time</h1>\n        <h1 className=\"mb-3 text-3xl font-bold\">5 hr/s</h1>\n        <a className=\"link text-blue-700\">&gt; Request for Reparation</a>\n      </div>\n    </>\n  );\n};\n\nexport default DashBRemainingOffset;\n\n","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBOwnPTO.jsx",["436","437","438","439","440","441","442","443","444"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport DataTable from \"react-data-table-component\";\n\nconst DashBOwnPTO = ({ link }) => {\n  var count = 1;\n\n  const [myLeaves, setMyLeaves] = useState([]);\n\n  useEffect(() => {\n    const fetchAllMyLeaves = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:6197/showallmyleaves\");\n        setMyLeaves(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchAllMyLeaves();\n  }, []);\n\n  function checkStatus(status) {\n    if (status == 0) {\n      return <div className=\"badge badge-warning\">Pending</div>;\n    }\n    if (status == 1) {\n      return <div className=\"badge badge-success\">Approved</div>;\n    }\n    if (status == 2) {\n      return <div className=\"badge badge-error\">Declined</div>;\n    }\n  }\n\n  const columns = [\n    {\n      name: \"#\",\n      selector: (row) => row.leave_id,\n      sortable: true,\n    },\n\n    {\n      name: \"Date filed\",\n      selector: (row) => moment(row.date_filed).format(\"MMM. DD, YYYY\"),\n      sortable: true,\n    },\n\n    {\n      name: \"PTO type\",\n      selector: (row) => row.leave_type,\n      sortable: true,\n    },\n\n    {\n      name: \"Leave reason\",\n      selector: (row) => row.leave_reason,\n    },\n\n    {\n      name: \"Date(s)\",\n      selector: (row) =>\n        row.leave_from === row.leave_to\n          ? moment(row.leave_from).format(\"MMM. DD, YYYY\")\n          : moment(row.leave_from).format(\"MMM. DD, YYYY\") +\n            \"  to  \" +\n            moment(row.leave_to).format(\"MMM. DD, YYYY\"),\n      sortable: true,\n    },\n\n    {\n      name: \"Status\",\n      selector: (row) => checkStatus(row.leave_status),\n    },\n    {\n      name: \"Actions\",\n      selector: (row) => (\n        <div className=\"flex flex-row justify-center flex-wrap gap-1\">\n          <button\n            className=\"btn btn-ghost-active btn-xs normal-case\"\n            onClick={() => document.getElementById(row.leave_id).showModal()}\n          >\n            Details\n          </button>\n\n          {/* Modal - Details */}\n          <dialog id={row.leave_id} className=\"modal text-left\">\n            <div className=\"modal-box\">\n              <form method=\"dialog\">\n                <button className=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">\n                  ✕\n                </button>\n              </form>\n\n              <h3 className=\"font-bold text-lg mb-5\">PTO Details</h3>\n\n              <div className=\"flex flex-col justify-center items-center\">\n                {row.emp_pic == \"\" || row.emp_pic == null ? (\n                  <div className=\"h-24 w-24 bg-gray-500 rounded-full flex justify-center items-center text-4xl text-white font-medium m-2\">\n                    {row.f_name.charAt(0) + row.s_name.charAt(0)}\n                  </div>\n                ) : (\n                  <img className=\"h-16 w-16 rounded-full m-2\" />\n                )}\n\n                <div className=\"text-center mb-7\">\n                  <h3 className=\"font-bold text-lg text-center\">\n                    {row.s_name + \", \" + row.f_name + \" \" + row.m_name}\n                  </h3>\n                  <span>{row.title}</span>\n                </div>\n\n                <div className=\"text-center\">\n                  <h3 className=\"font-semibold text-xl\">{row.leave_type}</h3>\n                  <h3 className=\"text-gray-600\">\n                    {row.leave_from === row.leave_to\n                      ? moment(row.leave_from).format(\"MMM. DD, YYYY\")\n                      : moment(row.leave_from).format(\"MMM. DD, YYYY\") +\n                        \"  to  \" +\n                        moment(row.leave_to).format(\"MMM. DD, YYYY\")}\n                  </h3>\n                </div>\n\n                <div className=\"mt-7 flex flex-col items-center gap-2\">\n                  <h3 className=\"italic text-gray-600\">\n                    Filed on {moment(row.date_filed).format(\"dddd\")} •{\" \"}\n                    {moment(row.date_filed).format(\"MMMM DD, YYYY\")}\n                  </h3>\n                  <div>{checkStatus(row.leave_status)}</div>\n                </div>\n              </div>\n\n              <div>\n                <h1 className=\"font-semibold mt-5\">Reason:</h1>\n\n                <div className=\"max-h-44 whitespace-normal\">\n                  <p className=\"justify-center text-justify\">\n                    {row.leave_reason == \"\" || row.leave_reason == null ? (\n                      <p className=\"italic text-gray-600\">\n                        No reason indicated.\n                      </p>\n                    ) : (\n                      <p>{row.leave_reason}</p>\n                    )}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </dialog>\n        </div>\n      ),\n    },\n  ];\n\n  if (myLeaves.length == 0) {\n    return (\n      <>\n        <>\n          <div className=\"m-2 p-5 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-col justify-center align-middle\">\n            <h1 className=\"text-lg font-semibold mb-4 text-center\">Your PTOs</h1>\n\n            <div className=\"flex flex-col items-center justify-center gap-4\">\n              <img src={link} className=\"h-48 w-48\"></img>\n\n              <h2 className=\"font-semibold\">You don't have any PTOs yet.</h2>\n            </div>\n          </div>\n        </>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <>\n          {/* PTO Notices */}\n          <div className=\"m-2 p-4 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-col justify-center align-middle\">\n            <h1 className=\"text-lg font-semibold mb-4 text-center\">Your PTOs</h1>\n\n            <DataTable columns={columns} data={myLeaves} highlightOnHover />\n          </div>\n        </>\n      </>\n    );\n  }\n};\n\nexport default DashBOwnPTO;\n","/Users/marvinbautista/Desktop/hris/frontend/src/components/manager/ManagerSideBar.jsx",["445","446","447","448","449","450","451","452"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/manager/ManagerPTONotices.jsx",["453","454","455","456","457","458","459","460","461","462"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DataTable from \"react-data-table-component\";\nimport moment from \"moment\";\n\nconst ManagerPTONotices = () => {\n  const [data, setData] = useState([]);\n  const [all, setAll] = useState([]);\n  const [approved, setDeptApproved] = useState([]);\n  const [pending, setDeptPending] = useState([]);\n  const [declined, setDeptDeclined] = useState([]);\n\n  useEffect(() => {\n    const fetchAllDeptLeaves = async () => {\n      try {\n        const all = await axios.get(\"http://localhost:6197/showalldleaves\");\n        const approved = await axios.get(\"http://localhost:6197/showapproveddepartmentleaves\")\n        const pending = await axios.get(\"http://localhost:6197/showpendingdepartmentleaves\")\n        const declined = await axios.get(\"http://localhost:6197/showrejecteddepartmentleaves\")\n        setData(all.data);\n        setDeptApproved(approved.data)\n        setDeptPending(pending.data)\n        setDeptDeclined(declined.data)\n        setAll(all.data)\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchAllDeptLeaves();\n  }, []);\n\n  function checkStatus(status) {\n    if (status == 0) {\n      return <div className=\"badge badge-warning\">Pending</div>;\n    }\n    if (status == 1) {\n      return <div className=\"badge badge-success\">Approved</div>;\n    }\n    if (status == 2) {\n      return <div className=\"badge badge-error\">Rejected</div>;\n    }\n  }\n\n  const handleClick = (e) => {\n    if (e.currentTarget.id === \"all\") {\n      setData(all);\n      document.getElementById(\"all\").classList.add(\"tab-active\");\n      document.getElementById(\"approved\").classList.remove(\"tab-active\");\n      document.getElementById(\"pending\").classList.remove(\"tab-active\");\n      document.getElementById(\"declined\").classList.remove(\"tab-active\");\n    } else if (e.currentTarget.id === \"approved\") {\n      setData(approved);\n      document.getElementById(\"all\").classList.remove(\"tab-active\");\n      document.getElementById(\"approved\").classList.add(\"tab-active\");\n      document.getElementById(\"pending\").classList.remove(\"tab-active\");\n      document.getElementById(\"declined\").classList.remove(\"tab-active\");\n    } else if (e.currentTarget.id === \"pending\") {\n      setData(pending);\n      document.getElementById(\"all\").classList.remove(\"tab-active\");\n      document.getElementById(\"approved\").classList.remove(\"tab-active\");\n      document.getElementById(\"pending\").classList.add(\"tab-active\");\n      document.getElementById(\"declined\").classList.remove(\"tab-active\");\n    } else if (e.currentTarget.id === \"declined\") {\n      setData(declined);\n      document.getElementById(\"all\").classList.remove(\"tab-active\");\n      document.getElementById(\"approved\").classList.remove(\"tab-active\");\n      document.getElementById(\"pending\").classList.remove(\"tab-active\");\n      document.getElementById(\"declined\").classList.add(\"tab-active\");\n    }\n  };\n\n  const columns = [\n    {\n      name: \"#\",\n      selector: (row) => row.leave_id,\n      sortable: true,\n    },\n    {\n      name: \"Date filed\",\n      selector: (row) => moment(row.date_filed).format(\"MMMM DD, YYYY\"),\n      sortable: true,\n    },\n    {\n      name: \"Name\",\n      selector: (row) => row.s_name + \", \" + row.f_name + \" \" + row.m_name,\n    },\n    {\n      name: \"PTO type\",\n      selector: (row) => row.leave_type,\n    },\n    {\n      name: \"Date(s)\",\n      selector: (row) =>\n        row.leave_from === row.leave_to\n          ? moment(row.leave_from).format(\"MMM. DD, YYYY\")\n          : moment(row.leave_from).format(\"MMM. DD, YYYY\") +\n            \"  to  \" +\n            moment(row.leave_to).format(\"MMM. DD, YYYY\"),\n    },\n    {\n      name: \"Status\",\n      selector: (row) => checkStatus(row.leave_status),\n    },\n\n    {\n      name: \"Actions\",\n      selector: (row) => (\n        <div className=\"flex flex-row justify-center flex-wrap gap-1\">\n          <button\n            className=\"btn btn-ghost-active btn-xs normal-case\"\n            onClick={() => document.getElementById(row.leave_id).showModal()}\n          >\n            Details\n          </button>\n\n          {/* Modal - Details */}\n          <dialog id={row.leave_id} className=\"modal text-left\">\n            <div className=\"modal-box\">\n              <form method=\"dialog\">\n                <button className=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">\n                  ✕\n                </button>\n              </form>\n\n              <h3 className=\"font-bold text-lg mb-5\">PTO Details</h3>\n\n              <div className=\"flex flex-col justify-center items-center\">\n                {row.emp_pic == \"\" || row.emp_pic == null ? (\n                  <div className=\"h-24 w-24 bg-gray-500 rounded-full flex justify-center items-center text-4xl text-white font-medium m-2\">\n                    {row.f_name.charAt(0) + row.s_name.charAt(0)}\n                  </div>\n                ) : (\n                  <img className=\"h-16 w-16 rounded-full m-2\" />\n                )}\n\n                <div className=\"text-center mb-7\">\n                  <h3 className=\"font-bold text-lg text-center\">\n                    {row.s_name + \", \" + row.f_name + \" \" + row.m_name}\n                  </h3>\n                  <span>{row.title}</span>\n                </div>\n\n                <div className=\"text-center\">\n                  <h3 className=\"font-semibold text-xl\">{row.leave_type}</h3>\n                  <h3 className=\"text-gray-600\">\n                    {row.leave_from === row.leave_to\n                      ? moment(row.leave_from).format(\"MMM. DD, YYYY\")\n                      : moment(row.leave_from).format(\"MMM. DD, YYYY\") +\n                        \"  to  \" +\n                        moment(row.leave_to).format(\"MMM. DD, YYYY\")}\n                  </h3>\n                </div>\n\n                <div className=\"mt-7 flex flex-col items-center gap-2\">\n                  <h3 className=\"italic text-gray-600\">\n                    Filed on {moment(row.date_filed).format(\"dddd\")} •{\" \"}\n                    {moment(row.date_filed).format(\"MMMM DD, YYYY\")}\n                  </h3>\n                  <div>{checkStatus(row.leave_status)}</div>\n                </div>\n              </div>\n\n              <div>\n                <h1 className=\"font-semibold mt-5\">Reason:</h1>\n\n                <div className=\"max-h-44 whitespace-normal\">\n                  <p className=\"justify-center text-justify\">\n                    {(row.leave_reason == \"\" || row.leave_reason == null) ? <p className=\"italic text-gray-600\">No reason indicated.</p> : <p>{row.leave_reason}</p>}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </dialog>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      {/* PTO Notices */}\n      <div className=\"m-2 p-5 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-col justify-center align-middle\">\n        <h1 className=\"text-lg font-semibold mb-4 text-center\">Department PTO Notices</h1>\n\n        <div\n          role=\"tablist\"\n          className=\"tabs tabs-lifted tabs-lg flex flex-row justify-center\"\n        >\n          <a role=\"tab\" id=\"all\" onClick={handleClick} className=\"tab tab-active\">\n            All\n          </a>\n          <a role=\"tab\" id=\"approved\" onClick={handleClick} className=\"tab\">\n            Approved\n          </a>\n          <a role=\"tab\" id=\"pending\" onClick={handleClick} className=\"tab\">\n            Pending\n          </a>\n          <a role=\"tab\" id=\"declined\" onClick={handleClick} className=\"tab\">\n            Declined\n          </a>\n        </div>\n\n        <hr className=\"mb-2\"></hr>\n\n        <DataTable\n          columns={columns}\n          data={data}\n          highlightOnHover\n          pagination\n        ></DataTable>\n\n        {/* <div className=\"overflow-x-auto max-w-full\">\n          <table className=\"table\">\n            head\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Date Filed</th>\n                <th>Name</th>\n                <th>PTO</th>\n                <th>Status</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              row 1\n\n              {deptLeaves.map((dl) => (\n                <tr>\n                  <th>{count++}</th>\n                  <td>{dl.date_filed}</td>\n                  <td>{dl.f_name + \" \" + dl.s_name}</td>\n                  <td>{dl.leave_type}</td>\n                  <td>{checkStatus(dl.leave_status)}</td>\n                  <td className=\"text-center\">\n                    <button\n                      className=\"btn btn-ghost btn-xs normal-case\"\n                      onClick={() =>\n                        document\n                          .getElementById(\"emp_pto_details_btn\")\n                          .showModal()\n                      }\n                    >\n                      Details\n                    </button>\n                    Modal - Details\n                    <dialog\n                      id=\"emp_pto_details_btn\"\n                      className=\"modal text-left\"\n                    >\n                      <div className=\"modal-box\">\n                        <form method=\"dialog\">\n                          <button className=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">\n                            ✕\n                          </button>\n                        </form>\n                        <h3 className=\"font-bold text-lg mb-5\">PTO Details</h3>\n                        <h3 className=\"font-bold text-xl mb-2\">\n                          {dl.f_name + \" \" + dl.s_name}\n                        </h3>\n                        <div className=\"flex\">\n                          <div className=\"flex-1\">\n                            <h3 className=\"font-base\">Date Filed:</h3>\n                            <h3 className=\"font-semibold mb-2\">\n                              Nov. 12, 2023\n                            </h3>\n                          </div>\n                          <div className=\"flex-1\">\n                            <h3 className=\"font-base\">PTO Type:</h3>\n                            <h3 className=\"font-semibold mb-2\">\n                              {dl.leave_type}\n                            </h3>\n                          </div>\n                        </div>\n                        <div className=\"flex\">\n                          <div className=\"flex-1\">\n                            <h3 className=\"font-base\">Date From:</h3>\n                            <h3 className=\"font-semibold mb-2\">\n                              {dl.leave_from}\n                            </h3>\n                          </div>\n                          <div className=\"flex-1\">\n                            <h3 className=\"font-base\">Date To:</h3>\n                            <h3 className=\"font-semibold mb-2\">\n                              {dl.leave_to}\n                            </h3>\n                          </div>\n                        </div>\n                        <div>\n                          <h1 className=\"font-base\">Reason:</h1>\n                          <p className=\"font-semibold mb-4\">\n                            {dl.leave_reason}\n                          </p>\n                        </div>\n                        <div className=\"badge badge-warning gap-1 mb-5\">\n                          {checkStatus(dl.leave_status)}\n                        </div>\n\n                        <div className=\"modal-action\"></div>\n                      </div>\n                    </dialog>\n                  </td>{\" \"}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div> */}\n      </div>\n    </>\n  );\n};\n\nexport default ManagerPTONotices;\n","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBPTONotices.jsx",["463"],[],"import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nimport DataTable from \"react-data-table-component\";\n\nconst DashBPTONotices = () => {\n  var count = 1;\n\n  const [approved, setApproved] = useState([]);\n\n  useEffect(() => {\n    const fetchAllApproved = async () => {\n      try {\n        const res = await Axios.get(\"http://localhost:6197/showapprovedleaves\");\n        setApproved(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchAllApproved();\n  }, []);\n\n  const columns = [\n    {\n      name: \"#\",\n      selector: row => row.leave_id,\n      sortable: true\n    },\n\n    {\n      name: \"Date filed\",\n      selector: row => moment(row.date_filed).format('MMM DD YYYY'),\n      sortable: true\n    },\n\n    {\n      name: \"Name\",\n      selector: row => row.s_name + \", \" + row.f_name + \" \" + row.m_name\n    },\n\n    {\n      name: \"PTO type\",\n      selector: row => row.leave_type\n    },\n\n    {\n      name: \"Date(s)\",\n        selector: (row) => row.leave_from === row.leave_to ? moment(row.leave_from).format('MMM. DD, YYYY') : moment(row.leave_from).format('MMM. DD, YYYY') + \"  to  \"+ moment(row.leave_to).format('MMM. DD, YYYY'),\n        sortable: true\n    },\n  ]\n\n  return (\n    <>\n      {/* PTO Notices */}\n      <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-col items-center justify-center\">\n        <h1 className=\"text-lg font-semibold mb-4\">Approved PTO Notices</h1>\n\n\n        <DataTable\n          columns = {columns}\n          data = {approved}\n          pagination\n          highlightOnHover\n        ></DataTable>\n      </div>\n    </>\n  );\n};\n\nexport default DashBPTONotices;\n","/Users/marvinbautista/Desktop/hris/frontend/src/components/client/ClientSideBar.jsx",["464","465","466","467","468","469","470"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBRemainingPTO.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRNumOfEmployees.jsx",["471","472"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst HRNumEmployees = () => {\n  const [employees, setEmployees] = useState([]);\n\n  const [countInfo, setCountInfo] = useState({\n    cc: \"\",\n    rc: \"\",\n    pc: \"\",\n    ptc: \"\",\n  });\n\n  useEffect(() => {\n    const fetchAllEmployees = async () => {\n      try {\n        const res1 = await axios.get(\n          \"http://localhost:6197/getCurrentEmployees\"\n        );\n        const res2 = await axios.get(\n          \"http://localhost:6197/getRegularEmployees\"\n        );\n        const res3 = await axios.get(\n          \"http://localhost:6197/getProbationaryEmployees\"\n        );\n        const res4 = await axios.get(\n          \"http://localhost:6197/getPartTimeEmployees\"\n        );\n        setCountInfo({\n          ...countInfo,\n          cc: res1.data.length,\n          rc: res2.data.length,\n          pc: res3.data.length,\n          ptc: res4.data.length,\n        });\n        console.log(setEmployees.length);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchAllEmployees();\n  }, []);\n\n  return (\n    <>\n      <div className=\"flex flex-col\">\n\n        <div className=\"mx-2 mb-4 flex flex-row justify-between items-center\">\n          <h2 className=\"text-md font-semibold\">Employees</h2>\n\n          <Link to=\"/addEmployee\">\n          <button className=\"btn btn-sm btn-outline normal-case\">\n            Add New\n          </button>\n        </Link>\n        </div>\n\n        <div className=\"flex flex-row flex-wrap box-border gap-3 mx-2 mb-4 items-center\">\n          <div className=\"w-full basis-full md:basis-4/12 lg:basis-1/12 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col items-center justify-center text-center box-border h-32\">\n            <h2 className=\"text-md font-semibold\">Number of Employees</h2>\n            <h1 className=\"text-7xl font-extrabold\">{countInfo.cc} </h1>\n          </div>\n\n          <div className=\"w-full basis-full md:basis-4/12 lg:basis-1/12 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col items-center justify-center text-center box-border h-32\">\n            <h1 className=\"text-3xl font-bold\">{countInfo.pc} </h1>\n            <h2 className=\"text-lg font-semibold\">Probationary</h2>\n          </div>\n\n          <div className=\"w-full basis-full md:basis-4/12 lg:basis-1/12 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col items-center justify-center text-center box-border h-32\">\n            <h1 className=\"text-3xl font-bold\">{countInfo.rc} </h1>\n            <h2 className=\"text-lg font-semibold\">Regulars</h2>\n          </div>\n\n          <div className=\"w-full basis-full md:basis-4/12 lg:basis-1/12 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col items-center justify-center text-center box-border h-32\">\n            <h1 className=\"text-3xl font-bold\">{countInfo.ptc} </h1>\n            <h2 className=\"text-lg font-semibold\">Part Timers</h2>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HRNumEmployees;\n","/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRNotices.jsx",["473","474","475","476","477","478","479"],[],"import React, {useState, useEffect} from \"react\";\nimport HRPTONotices from \"./HRPTONotices\";\nimport DashBRemainingOffset from \"../universal/DashBRemainingOffset\";\nimport DashBremainingPTO from \"../universal/DashBRemainingPTO\";\nimport DashBBirthdays from \"../universal/DashBBirthdays\";\nimport DashBAnniversaries from \"../universal/DashBAnniversaries\";\n\nconst HRNotices = () => {\n\n    const [ptos, setPtos] = useState([])\n\n    return (\n        <>\n            <div className=\"grow p-2 flex flex-col\">\n                <HRPTONotices></HRPTONotices>\n            </div>\n        </>\n    );\n}\n\nexport default HRNotices;",["480"],"/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRPTONotices.jsx",["481","482","483","484","485","486"],[],"import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nimport DataTable from \"react-data-table-component\";\n\nconst HRPTONotices = () => {\n  const [data, setData] = useState([]);\n  const [all, setAll] = useState([]);\n  const [approved, setApproved] = useState([]);\n  const [pending, setPending] = useState([]);\n  const [declined, setDeclined] = useState([]);\n\n  useEffect(() => {\n    const fetchAllApproved = async () => {\n      try {\n        const res = await Axios.get(\"http://localhost:6197/showallleaves\");\n        const res1 = await Axios.get(\"http://localhost:6197/showapprovedleaves\");\n        const res2 = await Axios.get(\"http://localhost:6197/showpendingleaves\");\n        const res3 = await Axios.get(\"http://localhost:6197/showrejectedleaves\");\n        // test\n        setAll(res.data);\n        setApproved(res1.data);\n        setPending(res2.data);\n        setDeclined(res3.data);\n        setData(res.data); //initialize database\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchAllApproved();\n  }, []);\n\n  const handleClick = (e) => {\n    if (e.currentTarget.id === \"all\") {\n      setData(all);\n      document.getElementById(\"all\").classList.add(\"tab-active\");\n      document.getElementById(\"app\").classList.remove(\"tab-active\");\n      document.getElementById(\"pen\").classList.remove(\"tab-active\");\n      document.getElementById(\"dec\").classList.remove(\"tab-active\");\n    } else if (e.currentTarget.id === \"app\") {\n      setData(approved);\n      document.getElementById(\"all\").classList.remove(\"tab-active\");\n      document.getElementById(\"app\").classList.add(\"tab-active\");\n      document.getElementById(\"pen\").classList.remove(\"tab-active\");\n      document.getElementById(\"dec\").classList.remove(\"tab-active\");\n    } else if (e.currentTarget.id === \"pen\") {\n      setData(pending);\n      document.getElementById(\"all\").classList.remove(\"tab-active\");\n      document.getElementById(\"app\").classList.remove(\"tab-active\");\n      document.getElementById(\"pen\").classList.add(\"tab-active\");\n      document.getElementById(\"dec\").classList.remove(\"tab-active\");\n    } else if (e.currentTarget.id === \"dec\") {\n      setData(declined);\n      document.getElementById(\"all\").classList.remove(\"tab-active\");\n      document.getElementById(\"app\").classList.remove(\"tab-active\");\n      document.getElementById(\"pen\").classList.remove(\"tab-active\");\n      document.getElementById(\"dec\").classList.add(\"tab-active\");\n    }\n  };\n\n  function checkStatus(status) {\n    if (status == 0) {\n      return <div className=\"badge badge-warning\">Pending</div>;\n    }\n    if (status == 1) {\n      return <div className=\"badge badge-success\">Approved</div>;\n    }\n    if (status == 2) {\n      return <div className=\"badge badge-error\">Declined</div>;\n    }\n  }\n\n  const columns = [\n    {\n      name: \"#\",\n      selector: (row) => row.leave_id,\n      sortable: true,\n    },\n\n    {\n      name: \"Name\",\n      selector: (row) => row.s_name + \", \" + row.f_name + \" \" + row.m_name,\n    },\n\n    {\n      name: \"PTO type\",\n      selector: (row) => row.leave_type,\n    },\n\n    {\n      name: \"Date(s)\",\n      selector: (row) =>\n        row.leave_from === row.leave_to\n          ? moment(row.leave_from).format(\"MMM. DD, YYYY\")\n          : moment(row.leave_from).format(\"MMM. DD, YYYY\") +\n            \"  to  \" +\n            moment(row.leave_to).format(\"MMM. DD, YYYY\"),\n      sortable: true,\n    },\n\n    {\n      name: \"Status\",\n      selector: (row) => checkStatus(row.leave_status),\n    },\n    {\n      name: \"Actions\",\n      selector: (row) => (\n        <div className=\"flex flex-row justify-center flex-wrap gap-1\">\n          <button\n            className=\"btn btn-ghost-active btn-xs normal-case\"\n            onClick={() => document.getElementById(row.leave_id).showModal()}\n          >\n            Details\n          </button>\n\n          {/* Modal - Details */}\n          <dialog id={row.leave_id} className=\"modal text-left\">\n            <div className=\"modal-box\">\n              <form method=\"dialog\">\n                <button className=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">\n                  ✕\n                </button>\n              </form>\n\n              <h3 className=\"font-bold text-lg mb-5\">PTO Details</h3>\n\n              <div className=\"flex flex-col justify-center items-center\">\n                {row.emp_pic == \"\" || row.emp_pic == null ? (\n                  <div className=\"h-24 w-24 bg-gray-500 rounded-full flex justify-center items-center text-4xl text-white font-medium m-2\">\n                    {row.f_name.charAt(0) + row.s_name.charAt(0)}\n                  </div>\n                ) : (\n                  <img className=\"h-16 w-16 rounded-full m-2\" />\n                )}\n\n                <div className=\"text-center mb-7\">\n                  <h3 className=\"font-bold text-lg text-center\">\n                    {row.s_name + \", \" + row.f_name + \" \" + row.m_name}\n                  </h3>\n                  <span>{row.title}</span>\n                </div>\n\n                <div className=\"text-center\">\n                  <h3 className=\"font-semibold text-xl\">{row.leave_type}</h3>\n                  <h3 className=\"text-gray-600\">\n                    {row.leave_from === row.leave_to\n                      ? moment(row.leave_from).format(\"MMM. DD, YYYY\")\n                      : moment(row.leave_from).format(\"MMM. DD, YYYY\") +\n                        \"  to  \" +\n                        moment(row.leave_to).format(\"MMM. DD, YYYY\")}\n                  </h3>\n                </div>\n\n                <div className=\"mt-7 flex flex-col items-center gap-2\">\n                  <h3 className=\"italic text-gray-600\">\n                    Filed on {moment(row.date_filed).format(\"dddd\")} •{\" \"}\n                    {moment(row.date_filed).format(\"MMMM DD, YYYY\")}\n                  </h3>\n                  <div>{checkStatus(row.leave_status)}</div>\n                </div>\n              </div>\n\n              <div>\n                <h1 className=\"font-semibold mt-5\">Reason:</h1>\n\n                <div className=\"max-h-44 whitespace-normal\">\n                  <p className=\"justify-center text-justify\">\n                    {row.leave_reason == \"\" || row.leave_reason == null ? (\n                      <p className=\"italic text-gray-600\">\n                        No reason indicated.\n                      </p>\n                    ) : (\n                      <p>{row.leave_reason}</p>\n                    )}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </dialog>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      {/* PTO Notices */}\n      <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-col justify-center align-middle\">\n        <h1 className=\"text-lg font-semibold text-center mb-4\">PTO Notices</h1>\n\n        <div\n          role=\"tablist\"\n          className=\"tabs tabs-lifted tabs-lg flex flex-row justify-center\"\n        >\n          <button role=\"tab\" id=\"all\" onClick={handleClick} className=\"tab tab-active\">\n            All\n          </button>\n          <button role=\"tab\" id=\"app\" onClick={handleClick} className=\"tab\">\n            Approved\n          </button>\n          <button role=\"tab\" id=\"pen\" onClick={handleClick} className=\"tab\">\n            Pending\n          </button>\n          <button role=\"tab\" id=\"dec\" onClick={handleClick} className=\"tab\">\n            Declined\n          </button>\n        </div>\n\n        <hr></hr>\n\n        <DataTable columns={columns} data={data} pagination highlightOnHover />\n      </div>\n    </>\n  );\n};\n\nexport default HRPTONotices;\n","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/EmployeeListComponent.jsx",["487","488","489","490","491","492","493"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DataTable from \"react-data-table-component\";\n\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst EmployeeListComponent = () => {\n  // const handleDelete = async (user_id) => {\n  //     try {\n  //         await axios.delete(\"http://localhost:6197/employeeslist/\" + user_id)\n  //     } catch(err){\n  //         console.log(err)\n  //     }\n  // }\n  const navigate = useNavigate();\n\n  const [employees, setEmployees] = useState([]);\n  const [records, setRecords] = useState(employees);\n  const [filter, setFilter] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchAllEmployees = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:6197/employeeslist\");\n        setEmployees(res.data);\n        setFilter(res);\n        setRecords(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchAllEmployees();\n  }, []);\n\n  function handleFilter(event) {\n    const newData = employees.filter((row) => {\n      return row.f_name\n        .toLowerCase()\n        .includes(event.target.value.toLowerCase());\n    });\n    setRecords(newData);\n  }\n\n  const columns = [\n    {\n      name: \"\",\n      selector: (row) => (\n        (row.emp_pic == \"\" || row.emp_pic == null) ? <div className=\"h-16 w-16 bg-gray-500 rounded-full flex justify-center items-center text-3xl text-white font-medium m-2\">{row.f_name.charAt(0) + row.s_name.charAt(0)}</div> : <img className=\"h-16 w-16 rounded-full m-2\" \n        src={row.emp_pic} />\n      ),\n    },\n    {\n      name: \"Employee Number\",\n      selector: (row) => row.emp_num,\n      sortable: true,\n    },\n    {\n      name: \"Name\",\n      selector: (row) => row.s_name + \", \" + row.f_name + \" \" + row.m_name,\n      sortable: true,\n    },\n\n    {\n      name: \"Present Address\",\n      selector: (row) => row.c_address,\n      sortable: true,\n    },\n\n    {\n      name: \"Work Email\",\n      selector: (row) => row.work_email,\n      sortable: true,\n    },\n\n    {\n      name: \"Contact Number\",\n      selector: (row) => row.contact_num,\n      sortable: true,\n    },\n\n    {\n      name: \"Actions\",\n      selector: (row) => (\n        <Link to={`/viewEmployee/` + row.emp_id}>\n        <a \n        className=\"btn btn-active btn-xs btn-info\">\n          View\n        </a>\n        </Link>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <div className=\"mb-5\">\n        <input\n          type=\"text\"\n          className=\"input input-bordered w-full md:w-1/3\"\n          placeholder=\"Search by name...\"\n          onChange={handleFilter}\n        />\n      </div>\n\n      <DataTable\n        columns={columns}\n        data={records}\n        pagination\n        highlightOnHover\n      ></DataTable>\n    </div>\n  );\n};\n\nexport default EmployeeListComponent;\n","/Users/marvinbautista/Desktop/hris/frontend/src/pages/client/ClientUserProfile.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/Profile.jsx",["494","495"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRProfile.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/ManagerProfile.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/AddEmployee.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRFormAddEmployee.jsx",["496"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport ButtonBack from \"../universal/ButtonBack\";\n\nconst HRFormAddEmployee = () => {\n  const [userReference, setUserReferences] = useState([]);\n\n  const[companies, setCompanies] = useState([])\n  const[divisions, setDivisions] = useState([])\n  const[departments, setDepartments] = useState([])\n  const[clients, setClients] = useState([])\n  const[positions, setPositions] = useState([])\n\n  useEffect(() => {\n    const fetchReferences = async () => {\n      try {\n        const res1 = await axios.get(\"http://localhost:6197/employeeslist\");\n        const res2 = await axios.get(\"http://localhost:6197/getAllCompanies\");\n        const res3 = await axios.get(\"http://localhost:6197/getAllDivisions\");\n        const res4 = await axios.get(\"http://localhost:6197/getAllDepartments\");\n        const res5 = await axios.get(\"http://localhost:6197/getAllClients\");\n        const res6 = await axios.get(\"http://localhost:6197/getAllPositions\");\n        setUserReferences(res1.data);\n        setCompanies(res2.data);\n        setDivisions(res3.data);\n        setDepartments(res4.data);\n        setClients(res5.data);\n        setPositions(res6.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchReferences();\n  }, []);\n\n  const isFound = () => {\n    userReference.some((element) => {\n      const email_box = document.getElementById(\"work_email\");\n      const emp_num_box = document.getElementById(\"emp_num\");\n\n      if (element.work_email === email_box.value) {\n        return (document.getElementById(\"work_email_label\").innerHTML =\n          \" * (Email already exists!)\");\n      } else {\n        document.getElementById(\"work_email_label\").innerHTML = \" *\";\n      }\n\n      if (element.emp_num === emp_num_box.value) {\n        return (document.getElementById(\"emp_num_label\").innerHTML =\n          \" * (Employee ID already exists!)\");\n      } else {\n        document.getElementById(\"emp_num_label\").innerHTML = \" *\";\n      }\n    });\n  };\n\n  const [employeeInfo, setEmployeeInfo] = useState({\n    emp_num: \"\",\n    work_email: \"\",\n    f_name: \"\",\n    m_name: \"\",\n    s_name: \"\",\n    emp_role: \"\",\n    emp_pic: \"\",\n    personal_email: \"\",\n    contact_num: \"\",\n    dob: \"\",\n    p_address: \"\",\n    c_address: \"\",\n    date_hired: \"\",\n    date_regularization: \"\",\n    emp_status: \"\",\n    sex: \"\",\n    gender: \"\",\n    civil_status: \"\",\n    company_id: \"\",\n    div_id: \"\",\n    dept_id: \"\",\n    client_id: \"\",\n    position_id: \"\",\n  });\n\n  const handleChange = (event) => {\n    setEmployeeInfo({...employeeInfo,[event.target.name]: [event.target.value]});\n    console.log(JSON.stringify(employeeInfo));\n    isFound();\n  }\n\n  const disableNext = () => {\n    var dateFrom = document.getElementById(\"date_hired\").value;\n\n    document.getElementById(\"date_regularization\").min =\n      moment(dateFrom).format(\"YYYY-MM-DD\");\n  };\n\n  const isSameAddress = () => {\n    if (document.getElementById(\"same_address_checkbox\").checked) {\n      document.getElementById(\"same_address_checkbox\").value =\n        document.getElementById(\"p_address\").value;\n      document.getElementById(\"c_address\").value =\n        document.getElementById(\"p_address\").value;\n      setEmployeeInfo({\n        ...employeeInfo,\n        c_address: document.getElementById(\"p_address\").value,\n      });\n    } else {\n      document.getElementById(\"c_address\").value = \"\";\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    addNewEmployee();\n  };\n\n  const addNewEmployee = () => {\n    axios\n      .post(\"http://localhost:6197/addNewEmployee\", employeeInfo)\n      .then((res) => console.log(JSON.stringify(employeeInfo)))\n      .catch((err) => console.log(err));\n\n    window.location.reload();\n    alert(\"Successfully added new employee: \" + employeeInfo.emp_num);\n  };\n\n  return (\n    <>\n      <>\n        <div className=\"p-4 sm:ml-64 flex flex-col\">\n          <ButtonBack></ButtonBack>\n          <div className=\"m-2\">\n            <h1 className=\"text-3xl font-bold tracking-wide\">\n              Add New Employee\n            </h1>\n          </div>\n          <form onSubmit={handleSubmit}>\n            {/* Personal Information */}\n            <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col\">\n              <h1 className=\"font-bold\">Personal Information</h1>\n\n              <div className=\"flex flex-col md:flex-row\">\n                {/* First Name */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      First Name<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    name=\"f_name\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    maxlength=\"100\"\n                    className=\"input input-bordered w-full \"\n                    required\n                  />\n                </label>\n\n                {/* Middle Name */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Middle Name<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    name=\"m_name\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    maxlength=\"100\"\n                    className=\"input input-bordered w-full \"\n                    required\n                  />\n                </label>\n\n                {/* Surname */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Surname<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    name=\"s_name\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    maxlength=\"100\"\n                    className=\"input input-bordered w-full \"\n                    required\n                  />\n                </label>\n              </div>\n\n              <div className=\"flex flex-col md:flex-row\">\n                {/* Date of Birth */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Date of Birth<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    name=\"dob\"\n                    onChange={handleChange}\n                    type=\"date\"\n                    max={moment().format(\"YYYY-MM-DD\")}\n                    className=\"input input-bordered w-full\"\n                    required\n                  />\n                </label>\n\n                {/* Civil Status */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">Civil Status</span>\n                  </div>\n                  <select\n                    name=\"civil_status\"\n                    onChange={handleChange}\n                    className=\"select select-bordered w-full\"\n                    required\n                  >\n                    <option disabled selected>\n                      Select Civil Status\n                    </option>\n                    <option>Single</option>\n                    <option>Married</option>\n                    <option>Widowed</option>\n                  </select>\n                </label>\n\n                {/* Sex */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Sex<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <select\n                    name=\"sex\"\n                    onChange={handleChange}\n                    className=\"select select-bordered w-full\"\n                    required\n                  >\n                    <option disabled selected>\n                      Select Sex\n                    </option>\n                    <option>Male</option>\n                    <option>Female</option>\n                  </select>\n                </label>\n\n                {/* Gender */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">Gender</span>\n                  </div>\n                  <input\n                    name=\"gender\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    className=\"input input-bordered w-full\"\n                  />\n                </label>\n              </div>\n\n              <div className=\"flex flex-col md:flex-row\">\n                {/* Permanent Address */}\n                <label className=\"form-control w-full max-w-5xl md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Permanent Address<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    id=\"p_address\"\n                    name=\"p_address\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    className=\"input input-bordered w-full\"\n                  />\n                </label>\n              </div>\n\n              <div className=\"flex flex-col md:flex-row\">\n                {/* Current Address */}\n                <label className=\"form-control w-full max-w-5xl md:mb-0 md:mr-4\">\n                  <div className=\"label pb-0\">\n                    <span className=\"label-text\">\n                      Current Address<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <div className=\"flex items-center \">\n                    {\" \"}\n                    <label className=\"label cursor-pointer\">\n                      <input\n                        id=\"same_address_checkbox\"\n                        name=\"c_address\"\n                        type=\"checkbox\"\n                        value=\"\"\n                        className=\"checkbox checkbox-sm\"\n                        onClick={isSameAddress}\n                        onChange={handleChange}\n                      />\n                      <span className=\"label-text ml-2\">\n                        {\" \"}\n                        Same as Permanent Address\n                      </span>\n                    </label>\n                  </div>\n                  <input\n                    id=\"c_address\"\n                    name=\"c_address\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    className=\"input input-bordered w-full\"\n                  />\n                </label>\n              </div>\n            </div>\n\n            {/* Contact Information */}\n            <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col\">\n              <h1 className=\"font-bold\">Contact Information</h1>\n\n              <div className=\"flex flex-col md:flex-row\">\n                {/* Personal Email */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Personal Email<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    name=\"personal_email\"\n                    onChange={handleChange}\n                    type=\"email\"\n                    className=\"input input-bordered w-full \"\n                  />\n                </label>\n                {/* Contact Number */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Contact Number<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    name=\"contact_num\"\n                    onChange={handleChange}\n                    type=\"number\"\n                    className=\"input input-bordered w-full \"\n                  />\n                </label>\n                <div></div>\n              </div>\n              <div className=\"divider\"></div>\n              <p className=\"font-semibold text-red-500 text-sm\">\n                Emergency Contact Information\n              </p>\n              <div className=\"flex flex-col md:flex-row\">\n                {/* Name */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">Name</span>\n                  </div>\n                  <input\n                    name=\"emergency_contact_name\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    className=\"input input-bordered w-full \"\n                  />\n                </label>\n\n                {/* Number */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">Contact Number</span>\n                  </div>\n                  <input\n                    name=\"emergency_contact_num\"\n                    onChange={handleChange}\n                    type=\"number\"\n                    className=\"input input-bordered w-full \"\n                  />\n                </label>\n              </div>\n            </div>\n\n            {/* Employee Information */}\n            <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col\">\n              <h1 className=\"font-bold mb-2\">Employee Information</h1>\n\n              <div className=\"flex flex-col w-full md:flex-row\">\n                {/* Employee ID */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Employee ID\n                      <span id=\"emp_num_label\" className=\"text-red-500\">\n                        {\" \"}\n                        *\n                      </span>\n                    </span>\n                  </div>\n                  <div className=\"flex\">\n\n                    <select \n                    id=\"company_id\"\n                    name=\"company_id\"\n                    className=\"select select-bordered w-32\" \n                    onChange={handleChange}\n                    required>\n                      <option disabled selected>Company</option>\n                      {companies.map((c) => (\n                        <option value={c.company_id}>{c.company_name}</option>\n                      ))}\n                    </select>\n\n                    <input\n                      id=\"emp_num\"\n                      name=\"emp_num\"\n                      onChange={handleChange}\n                      type=\"text\"\n                      maxlength=\"100\"\n                      className=\"input input-bordered w-full \"\n                    />\n                  </div>\n                </label>\n\n                {/* Work Email */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Work E-mail\n                      <span id=\"work_email_label\" className=\"text-red-500\">\n                        {\" \"}\n                        *\n                      </span>\n                    </span>\n                  </div>\n                  <input\n                    id=\"work_email\"\n                    name=\"work_email\"\n                    maxlength=\"100\"\n                    onChange={handleChange}\n                    type=\"email\"\n                    className=\"input input-bordered w-full \"\n                    required\n                  />\n                </label>\n              </div>\n\n              <div className=\"flex flex-col w-full md:flex-row\">\n                {/* Division */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Division\n                      <span id=\"division_label\" className=\"text-red-500\">\n                        {\" \"}\n                        *\n                      </span>\n                    </span>\n                  </div>\n                  <select \n                  id=\"div_id\"\n                  name=\"div_id\"\n                  className=\"select select-bordered w-full \"\n                  onChange={handleChange}\n                  required>\n                    <option disabled selected>Select Division</option>\n                    {divisions.map((di) => (\n                      <option value={di.div_id}>{di.div_name}</option>\n                    ))}\n                  </select>\n                </label>\n\n                {/* Department */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Department\n                      <span id=\"department_label\" className=\"text-red-500\">\n                        {\" \"}\n                        *\n                      </span>\n                    </span>\n                  </div>\n                  <select \n                  id=\"dept_id\"\n                  name=\"dept_id\"\n                  className=\"select select-bordered w-full \" \n                  onChange={handleChange}\n                  required>\n                    <option disabled selected>\n                      Select Department\n                    </option>\n                    {departments.map((de) => (\n                    <option value={de.dept_id}>{de.dept_name}</option>\n                    ))}\n                  </select>\n                </label>\n              </div>\n\n              <div className=\"flex flex-col w-full md:flex-row\">\n                {/* Client/Cluster */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Client/Cluster\n                      <span id=\"emp_num_label\" className=\"text-red-500\">\n                        {\" \"}\n                        *\n                      </span>\n                    </span>\n                  </div>\n                  <select \n                  id=\"client_id\"\n                  name=\"client_id\"\n                  className=\"select select-bordered w-full \" \n                  onChange={handleChange}\n                  required>\n                    <option disabled selected>Select Client/Cluster</option>\n                    {clients.map((c) => (\n                      <option value={c.client_id}>{c.client_name}</option>\n                    ))}\n                  </select>\n                </label>\n\n                {/* Positions */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Position\n                      <span id=\"department_label\" className=\"text-red-500\">\n                        {\" \"}\n                        *\n                      </span>\n                    </span>\n                  </div>\n                  <select\n                  id=\"position_id\"\n                  name=\"position_id\"\n                  className=\"select select-bordered w-full \" \n                  onChange={handleChange}\n                  required>\n                    <option disabled selected>Select Position</option>\n                    {positions.map((p) => (\n                    <option value={p.position_id}>{p.position_name}</option>\n                    ))}\n                  </select>\n                </label>\n              </div>\n\n              <div className=\"flex flex-col w-full md:flex-row\">\n                {/* Employment Status */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Employment Status<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <select\n                    name=\"emp_status\"\n                    onChange={handleChange}\n                    className=\"select select-bordered w-full \"\n                    required\n                  >\n                    <option disabled selected>\n                      Select Employment Status\n                    </option>\n                    <option>Probationary</option>\n                    <option>Regular</option>\n                    <option>Part-time</option>\n                  </select>\n                </label>\n\n                {/* Employee Role */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Employment Role<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <select\n                    name=\"emp_role\"\n                    onChange={handleChange}\n                    className=\"select select-bordered w-full \"\n                    required\n                  >\n                    <option disabled selected>\n                      Select Employment Role\n                    </option>\n                    <option value=\"3\">Manager</option>\n                    <option value=\"2\">Regular Employee</option>\n                    <option value=\"1\">HR</option>\n                    <option value=\"0\">Administrator</option>\n                  </select>\n                </label>\n              </div>\n\n              <div className=\"flex flex-col md:flex-row\">\n                {/* Date Hired */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Date Hired<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    id=\"date_hired\"\n                    name=\"date_hired\"\n                    onChange={handleChange}\n                    onInput={disableNext}\n                    type=\"date\"\n                    className=\"input input-bordered w-full \"\n                  />\n                </label>\n\n                {/* Date of Regularization */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Date of Regularization\n                      <span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    id=\"date_regularization\"\n                    name=\"date_regularization\"\n                    onChange={handleChange}\n                    type=\"date\"\n                    className=\"input input-bordered w-full \"\n                  />\n                </label>\n\n                {/* Date Separated*/}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">Date Separated</span>\n                  </div>\n                  <input\n                    name=\"date_separated\"\n                    onChange={handleChange}\n                    type=\"date\"\n                    className=\"input input-bordered w-full \"\n                    disabled\n                  />\n                </label>\n              </div>\n\n              <div className=\"divider\"></div>\n\n              <div className=\"flex flex-col md:flex-row\">\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">Upload Profile Picture</span>\n                  </div>\n                  <input\n                    name=\"emp_pic\"\n                    onChange={handleChange}\n                    type=\"file\"\n                    className=\"file-input w-full max-w-xs\"\n                  />\n                </label>\n              </div>\n\n              <div className=\"divider\"></div>\n\n              {/* <div className=\"flex flex-col md:flex-row\">\n                \n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">SSS Number</span>\n                  </div>\n                  <input type=\"text\" className=\"input input-bordered w-full \" />\n                </label>\n\n                \n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">SSS Number</span>\n                  </div>\n                  <input type=\"text\" className=\"input input-bordered w-full\" />\n                </label>\n              </div> */}\n\n              {/* <div className=\"flex flex-col md:flex-row\">\n          \n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">HDMC Number</span>\n                  </div>\n                  <input type=\"text\" className=\"input input-bordered w-full \" />\n                </label>\n\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">TIN Number</span>\n                  </div>\n                  <input type=\"text\" className=\"input input-bordered w-full \" />\n                </label>\n              </div> */}\n            </div>\n            <div className=\"flex justify-end m-2\">\n              <input type=\"submit\" value=\"Submit\" className=\"btn\" />\n            </div>\n          </form>\n        </div>\n      </>\n    </>\n  );\n};\n\nexport default HRFormAddEmployee;\n","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBPTOApprovedAndOwned.jsx",["497","498","499","500","501","502","503"],[],"import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nimport DataTable from \"react-data-table-component\";\n\nconst DashBPTOApprovedAndOwned = () => {\n  const [data, setData] = useState([]);\n  const [all, setMyLeave] = useState([]);\n  const [approved, setApproved] = useState([]);\n\n  useEffect(() => {\n    const fetchAllApproved = async () => {\n      try {\n        const res = await Axios.get(\"http://localhost:6197/showallmyleaves\");\n        const res1 = await Axios.get(\"http://localhost:6197/showapprovedleaves\");\n        const res2 = await Axios.get(\"http://localhost:6197/login\");\n        // test\n        setMyLeave(res.data);\n        setApproved(res1.data);\n        setData(res.data); //initialize database\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchAllApproved();\n  }, []);\n\n  const handleClick = (e) => {\n    if (e.currentTarget.id === \"all\") {\n      setData(all);\n      document.getElementById(\"all\").classList.add(\"tab-active\");\n      document.getElementById(\"app\").classList.remove(\"tab-active\");\n    } else if (e.currentTarget.id === \"app\") {\n      setData(approved);\n      document.getElementById(\"all\").classList.remove(\"tab-active\");\n      document.getElementById(\"app\").classList.add(\"tab-active\");\n    }\n  };\n\n  function checkStatus(status) {\n    if (status == 0) {\n      return <div className=\"badge badge-warning\">Pending</div>;\n    }\n    if (status == 1) {\n      return <div className=\"badge badge-success\">Approved</div>;\n    }\n    if (status == 2) {\n      return <div className=\"badge badge-error text-white\">Declined</div>;\n    }\n  }\n\n  const columns = [\n    {\n      name: \"#\",\n      selector: (row) => row.leave_id,\n      sortable: true,\n    },\n\n    {\n      name: \"Name\",\n      selector: (row) => row.s_name + \", \" + row.f_name + \" \" + row.m_name,\n    },\n\n    {\n      name: \"PTO type\",\n      selector: (row) => row.leave_type,\n    },\n\n    {\n      name: \"Date(s)\",\n      selector: (row) =>\n        row.leave_from === row.leave_to\n          ? moment(row.leave_from).format(\"MMM. DD, YYYY\")\n          : moment(row.leave_from).format(\"MMM. DD, YYYY\") +\n            \"  to  \" +\n            moment(row.leave_to).format(\"MMM. DD, YYYY\"),\n      sortable: true,\n    },\n\n    {\n      name: \"Status\",\n      selector: (row) => checkStatus(row.leave_status),\n    },\n\n    {\n      name: \"Action\",\n      selector: (row) => (\n        <div className=\"flex flex-row justify-center flex-wrap gap-1\">\n          <button\n            className=\"btn btn-ghost-active btn-xs normal-case\"\n            onClick={() => document.getElementById(row.leave_id).showModal()}\n          >\n            Details\n          </button>\n\n          {/* Modal - Details */}\n          <dialog id={row.leave_id} className=\"modal text-left\">\n            <div className=\"modal-box\">\n              <form method=\"dialog\">\n                <button className=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">\n                  ✕\n                </button>\n              </form>\n\n              <h3 className=\"font-bold text-lg mb-5\">PTO Details</h3>\n\n              <div className=\"flex flex-col justify-center items-center\">\n                {row.emp_pic == \"\" || row.emp_pic == null ? (\n                  <div className=\"h-24 w-24 bg-gray-500 rounded-full flex justify-center items-center text-4xl text-white font-medium m-2\">\n                    {row.f_name.charAt(0) + row.s_name.charAt(0)}\n                  </div>\n                ) : (\n                  <img className=\"h-16 w-16 rounded-full m-2\" />\n                )}\n\n                <div className=\"text-center mb-7\">\n                  <h3 className=\"font-bold text-lg text-center\">\n                    {row.s_name + \", \" + row.f_name + \" \" + row.m_name}\n                  </h3>\n                  <span>{row.title}</span>\n                </div>\n\n                <div className=\"text-center\">\n                  <h3 className=\"font-semibold text-xl\">{row.leave_type}</h3>\n                  <h3 className=\"text-gray-600\">\n                    {row.leave_from === row.leave_to\n                      ? moment(row.leave_from).format(\"MMM. DD, YYYY\")\n                      : moment(row.leave_from).format(\"MMM. DD, YYYY\") +\n                        \"  to  \" +\n                        moment(row.leave_to).format(\"MMM. DD, YYYY\")}\n                  </h3>\n                </div>\n\n                <div className=\"mt-7 flex flex-col items-center gap-2\">\n                  <h3 className=\"italic text-gray-600\">\n                    Filed on {moment(row.date_filed).format(\"dddd\")} •{\" \"}\n                    {moment(row.date_filed).format(\"MMMM DD, YYYY\")}\n                  </h3>\n                  <div>{checkStatus(row.leave_status)}</div>\n                </div>\n              </div>\n              \n              <div>\n                <h1 className=\"font-semibold mt-5\">Reason:</h1>\n\n                <div className=\"max-h-44 whitespace-normal\">\n                  <p className=\"justify-center text-justify\">\n                    {row.leave_reason == \"\" || row.leave_reason == null ? (\n                      <p className=\"italic text-gray-600\">\n                        No reason indicated.\n                      </p>\n                    ) : (\n                      <p>{row.leave_reason}</p>\n                    )}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </dialog>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      {/* PTO Notices */}\n      <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-col justify-center align-middle\">\n        <h1 className=\"text-lg font-semibold text-center mb-4\">PTO Notices</h1>\n\n        <div\n          role=\"tablist\"\n          className=\"tabs tabs-lifted tabs-lg flex flex-row justify-center\"\n        >\n          <button role=\"tab\" id=\"all\" onClick={handleClick} className=\"tab tab-active\">\n            My PTOs\n          </button>\n          <button role=\"tab\" id=\"app\" onClick={handleClick} className=\"tab\">\n            Approved\n          </button>\n        </div>\n\n        <hr></hr>\n\n        <DataTable columns={columns} data={data} pagination highlightOnHover />\n      </div>\n    </>\n  );\n};\n\nexport default DashBPTOApprovedAndOwned;\n","/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/ViewEmployee.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRFormViewEmployee.jsx",["504"],[],"import moment from \"moment\";\nimport Axios from \"axios\";\nimport { React, useEffect, useState } from \"react\";\nimport ButtonBack from \"../universal/ButtonBack\";\nimport {useParams, Link} from \"react-router-dom\"\n\nconst HRFormViewEmployee = () => {\n  const {emp_id} = useParams()\n  const [profile, setProfile] = useState([]);\n\n  const [ptoInfo, setPtoInfo] = useState({\n    new_pto_balance: \"\",\n  });\n\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const res = await Axios.get(`http://localhost:6197/viewEmployee/${emp_id}`);\n        setProfile(res.data);\n        setPtoInfo({...ptoInfo, new_pto_balance: res.data[0].leave_balance})\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchUserProfile();\n  }, []);\n\n\n  const handleChange = (event) => {\n    setPtoInfo({ ...ptoInfo, [event.target.name]: [event.target.value] });\n\n    console.log(JSON.stringify(ptoInfo))\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    Axios\n      .post(`http://localhost:6197/setPTO/${emp_id}`, ptoInfo)\n      .then((res) => console.log(JSON.stringify(ptoInfo)))\n      .catch((err) => console.log(err));\n\n      document.getElementById(\"manage-pto\").close();\n      document.getElementById(\"pto-manage\").reset();\n\n      // window.location.reload();\n      alert(\"Successfully set new PTO to: \" + JSON.stringify(ptoInfo));\n  };\n\n  ///setPTO/:emp_id\n\n  return (\n    <>\n      {profile.map((p) => (\n        <div className=\"p-4 sm:ml-64 flex flex-col\">\n          <ButtonBack></ButtonBack>\n\n          {/* Name, Primary */}\n          <div className=\"m-2 p-3\">\n            <h1 className=\"text-4xl font-bold tracking-wide\">\n              {/* Marco Eliseo Antero */}\n              {p.f_name + \" \" + p.m_name + \" \" + p.s_name}\n            </h1>\n            <h1>{p.work_email}</h1>\n            <h1>{p.title}</h1>\n            <h1>{p.emp_num}</h1>\n          </div>\n\n          <div className=\"text-right mr-2\">\n            {\" \"}\n            <Link to={`/editemployee/` + p.emp_id}>\n            <button className=\"btn btn-sm btn-outline normal-case mx-1\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke-width=\"1.5\"\n                stroke=\"currentColor\"\n                class=\"w-6 h-6\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10\"\n                />\n              </svg>\n              Edit\n            </button>\n\n            </Link>\n            \n            <button\n              className=\"btn btn-sm btn-outline normal-case mx-1\"\n              onClick={() => document.getElementById(\"manage-pto\").showModal()}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke-width=\"1.5\"\n                stroke=\"currentColor\"\n                class=\"w-6 h-6\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  d=\"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5\"\n                />\n              </svg>\n              Manage PTO\n            </button>\n          </div>\n\n          <dialog\n            id=\"manage-pto\"\n            className=\"modal modal-bottom sm:modal-middle\"\n          >\n            <div className=\"modal-box justify-center\">\n            <form \n            method=\"dialog\"\n            >\n                <button className=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\"\n                onClick={() => \n                  document.getElementById(\"manage-pto\").close() && \n                  document.getElementById(\"pto-manage\").reset()}>\n                  ✕\n                </button>\n              </form >\n              <div className=\"flex flex-col justify-center\">\n                <h3 className=\"font-bold text-xl mb-2 text-center\">PTO Management</h3>\n                <p className=\"text-md text-center\">{p.emp_num}</p>\n                <p className=\"text-lg font-bold text-center\">{p.f_name + \" \" + p.m_name + \" \" + p.s_name}</p>\n                <p className=\"text-sm mb-1 text-center\">Current PTO: {p.leave_balance}</p>\n                  <form id=\"pto-manage\" onSubmit={handleSubmit} action=\"\">\n                  <div className=\"flex flex-col gap-3 items-center\">\n                    <input\n                      name=\"new_pto_balance\"\n                      type=\"number\"\n                      step=\"0.5\"\n                      min=\"0\"\n                      className=\"input input-bordered w-28\"\n                      value={ptoInfo.new_pto_balance}\n                      onChange={handleChange}\n                    />\n                    <button value={p.emp_id} type=\"submit\" className=\"btn btn-md max-w-xs\">Save</button>\n                    </div>\n                  </form>\n              </div>\n            </div>\n          </dialog>\n          {/* Contact Information */}\n          <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col\">\n            <h1 className=\"font-bold\">Contact Information</h1>\n\n            <div className=\"flex flex-col md:flex-row\">\n              {/* Personal Email */}\n              <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                <div className=\"label\">\n                  <span className=\"label-text\">Personal Email</span>\n                </div>\n                <input\n                  value={p.personal_email}\n                  type=\"text\"\n                  className=\"input input-bordered w-full max-w-xs\"\n                  disabled\n                  readonly\n                />\n              </label>\n\n              {/* Contact Number */}\n              <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                <div className=\"label\">\n                  <span className=\"label-text\">Contact Number</span>\n                </div>\n                <input\n                  value={p.contact_num}\n                  type=\"text\"\n                  className=\"input input-bordered w-full max-w-xs\"\n                  disabled\n                />\n              </label>\n              <div></div>\n            </div>\n            <div className=\"divider\"></div>\n            <p className=\"font-semibold text-red-500 text-sm\">\n              Emergency Contact Information\n            </p>\n            <div className=\"flex flex-col md:flex-row\">\n              {/* Name */}\n              <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                <div className=\"label\">\n                  <span className=\"label-text\">Name</span>\n                </div>\n                <input\n                  value={p.emergency_contact_name}\n                  type=\"text\"\n                  className=\"input input-bordered w-full max-w-xs\"\n                  disabled\n                />\n              </label>\n\n              {/* Number */}\n              <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                <div className=\"label\">\n                  <span className=\"label-text\">Number</span>\n                </div>\n                <input\n                  value={p.emergency_contact_num}\n                  type=\"text\"\n                  className=\"input input-bordered w-full max-w-xs\"\n                  disabled\n                />\n              </label>\n            </div>\n          </div>\n\n          {/* Personal Information */}\n          <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col\">\n            <h1 className=\"font-bold\">Personal Information</h1>\n\n            <div className=\"flex flex-col md:flex-row\">\n              {/* Date of Birth */}\n              <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                <div className=\"label\">\n                  <span className=\"label-text\">Date of Birth</span>\n                </div>\n                <input\n                  value={moment(p.dob).format(\"MMMM DD, YYYY\")}\n                  type=\"text\"\n                  className=\"input input-bordered w-full max-w-xs\"\n                  disabled\n                />\n              </label>\n\n              {/* Sex */}\n              <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                <div className=\"label\">\n                  <span className=\"label-text\">Sex</span>\n                </div>\n                <input\n                  value={p.sex}\n                  type=\"text\"\n                  className=\"input input-bordered w-full max-w-xs\"\n                  disabled\n                />\n              </label>\n            </div>\n            <div className=\"flex flex-col md:flex-row\">\n              {/* Civil Status */}\n              <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                <div className=\"label\">\n                  <span className=\"label-text\">Civil Status</span>\n                </div>\n                <input\n                  value={p.civil_status}\n                  type=\"text\"\n                  className=\"input input-bordered w-full max-w-xs\"\n                  disabled\n                />\n              </label>\n            </div>\n\n            <div className=\"flex flex-col md:flex-row\">\n              {/* Permanent Address */}\n              <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                <div className=\"label\">\n                  <span className=\"label-text\">Permanent Address</span>\n                </div>\n                <input\n                  value={p.p_address}\n                  type=\"text\"\n                  className=\"input input-bordered w-full\"\n                  disabled\n                />\n              </label>\n            </div>\n\n            <div className=\"flex flex-col md:flex-row\">\n              {/* Current Address */}\n              <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                <div className=\"label\">\n                  <span className=\"label-text\">Current Address</span>\n                </div>\n                <input\n                  value={p.c_address}\n                  type=\"text\"\n                  className=\"input input-bordered w-full\"\n                  disabled\n                />\n              </label>\n            </div>\n          </div>\n\n          {/* Employee Information */}\n          <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col\">\n            <h1 className=\"font-bold mb-2\">Employee Information</h1>\n\n            <div>\n              <h1 className=\"font-bold text-sm\">Date Hired</h1>\n              <h1 className=\"ml-2 text-sm\">\n                {moment(p.date_hired).format(\"MMMM DD, YYYY\")}\n              </h1>\n            </div>\n\n            {/* <div className=\"divider\"></div>\n\n            <div className=\"flex\">\n              <div className=\"flex-1\">\n                <h1 className=\"font-bold text-sm\">SSS Number</h1>\n                <h1 className=\"text-sm ml-2\">00-0000000-0</h1>\n              </div>\n\n              <div className=\"flex-1\">\n                <h1 className=\"font-bold text-sm\">PHIC Number</h1>\n                <h1 className=\"text-sm ml-2\">00-0000000-0</h1>\n              </div>\n\n              <div className=\"flex-1\">\n                <h1 className=\"font-bold text-sm\">TIN Number</h1>\n                <h1 className=\"text-sm ml-2\">00-0000000-0</h1>\n              </div>\n            </div>\n\n            <div className=\"divider\"></div>\n\n            <div className=\"flex my-1\">\n              <div className=\"flex-1\">\n                <h1 className=\"font-bold text-sm\">Rate</h1>\n                <h1 className=\"text-sm ml-2\">00-0000000-0</h1>\n              </div>\n\n              <div className=\"flex-1\">\n                <h1 className=\"font-bold text-sm\">Basic Salary</h1>\n                <h1 className=\"text-sm ml-2\">00-0000000-0</h1>\n              </div>\n\n              <div className=\"flex-1\"></div>\n            </div>\n\n            <div className=\"flex my-1\">\n              <div className=\"flex-1\">\n                <h1 className=\"font-bold text-sm\">Night Differential</h1>\n                <h1 className=\"text-sm ml-2\">00-0000000-0</h1>\n              </div>\n\n              <div className=\"flex-1\">\n                <h1 className=\"font-bold text-sm\">Bonus</h1>\n                <h1 className=\"text-sm ml-2\">00-0000000-0</h1>\n              </div>\n\n              <div className=\"flex-1\"></div> */}\n            {/* </div> */}\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default HRFormViewEmployee;\n","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/SideBarProfile.jsx",["505","506","507"],[],"import Axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst SideBarProfile = ({ color, link_to, fill }) => {\n  const [profile, setProfile] = useState([]);\n\n\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const res = await Axios.get(\"http://localhost:6197/myProfile\");\n        setProfile(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchUserProfile();\n  }, []);\n\n  // useEffect(() => {\n  //   const fetchUserData = async () => {\n  //     try {\n  //       const res = await Axios.get(\"http://localhost:6197/login\");\n  //       setUser(res.data.user);\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  //   fetchUserData();\n  // }, []);\n\n  return (\n    <>\n    {profile.map((user) => (\n      <div>\n          <div className=\"flex justify-center mt-5  mb-5\">\n            {/* <img\n              className=\"h-28- w-28 rounded-full ring-2 ring-white\"\n              src={user.emp_pic}\n              alt=\"\"\n            /> */}\n\n            {user.emp_pic == \"\" || user.emp_pic == null ? (\n              <div className=\"h-28 w-28 bg-gray-500 rounded-full flex justify-center items-center text-5xl text-white font-medium m-2 ring-2 ring-white\">\n                {user.f_name.charAt(0) + user.s_name.charAt(0)}\n              </div>\n            ) : (\n              <img\n                className=\"h-28 w-28 rounded-full m-2 ring-2 ring-white\"\n                src={user.emp_pic}\n              />\n            )}\n\n            {/* (row.emp_pic == \"\") ? <div className=\"h-28 w-28 bg-gray-500 rounded-full flex justify-center items-center text-4xl text-white font-medium m-2\">{row.f_name.charAt(0) + row.s_name.charAt(0)}</div> : <img className=\"h-16 w-16 rounded-full m-2\" \n        src={row.emp_pic} /> */}\n          </div>\n      \n        <div className=\"flex flex-col items-center justify-center\">\n          \n            <div className={`font-bold text-xl existing-class ${color}`}>\n              {user.f_name + \" \" + user.s_name}\n            </div>\n          \n\n          \n            <div className={`mb-1 text-center ${color}`}>{user.position_name}</div>\n          <div>\n            <Link to={`${link_to}`}>\n              <a className=\"mb-12 flex items-center p-1 text-gray-900 rounded-lg dark:text-white hover:bg-gray-800 dark:hover:bg-gray-700 group\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  fill={`${fill}`}\n                  className=\"w-5 h-5\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M7.5 6a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM3.751 20.105a8.25 8.25 0 0116.498 0 .75.75 0 01-.437.695A18.683 18.683 0 0112 22.5c-2.786 0-5.433-.608-7.812-1.7a.75.75 0 01-.437-.695z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n\n                <span className={`ml-3 ${color}`}>Profile</span>\n              </a>\n            </Link>\n          </div>\n        </div>\n      </div>\n      ))}\n    </>\n  );\n};\n\nexport default SideBarProfile;\n","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/ButtonBack.jsx",["508","509"],[],"import { React, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ButtonBack = () => {\n  const navigate = useNavigate();\n  return (\n    <>\n      <div>\n        <button onClick={() => navigate(-1)} className=\"btn btn-sm\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"1.5\"\n            stroke=\"currentColor\"\n            class=\"w-6 h-6\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              d=\"M19.5 12h-15m0 0l6.75 6.75M4.5 12l6.75-6.75\"\n            />\n          </svg>\n          Back\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default ButtonBack\n","/Users/marvinbautista/Desktop/hris/frontend/src/components/manager/ManagerPTORequestTableLimited.jsx",["510","511","512","513","514","515","516","517"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport DataTable from \"react-data-table-component\";\nimport { Link } from \"react-router-dom\";\n\nconst ManagerPTORequestTableLimited = ({link}) => {\n  const [leaves, setPendingLeaves] = useState([]);\n\n  useEffect(() => {\n    const fetchAllPendingLeaves = async () => {\n      try {\n        const res = await axios.get(\n          \"http://localhost:6197/showpendingdepartmentleaveslimited\"\n        );\n        setPendingLeaves(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchAllPendingLeaves();\n  }, []);\n\n  const handleApproval = async (leave_id) => {\n    try {\n      await axios.post(\"http://localhost:6197/approveleave/\" + leave_id);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleRejection = async (leave_id) => {\n    try {\n      await axios.post(\"http://localhost:6197/rejectleave/\" + leave_id);\n      await axios.post(\"http://localhost:6197/returnTempPTO/\" + leave_id);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  function checkStatus(status) {\n    if (status == 0) {\n      return <div className=\"badge badge-warning text-xs\">Pending</div>;\n    }\n    if (status == 1) {\n      return <div className=\"badge badge-success\">Approved</div>;\n    }\n    if (status == 2) {\n      return <div className=\"badge badge-error text-white\">Declined</div>;\n    }\n  }\n\n  const columns = [\n    {\n      name: \"Date filed\",\n      selector: (row) => moment(row.date_filed).format(\"MMMM DD, YYYY\"),\n      sortable: true,\n    },\n\n    {\n      name: \"Name\",\n      selector: (row) => row.s_name + \", \" + row.f_name + \" \" + row.m_name,\n    },\n\n    {\n      name: \"PTO type\",\n      selector: (row) => row.leave_type,\n    },\n\n    {\n      name: \"Date(s)\",\n      selector: (row) =>\n        row.leave_from === row.leave_to\n          ? moment(row.leave_from).format(\"MMMM DD, YYYY\")\n          : moment(row.leave_from).format(\"MMMM DD, YYYY\") +\n            \"  to  \" +\n            moment(row.leave_to).format(\"MMMM DD, YYYY\"),\n    },\n\n    {\n      name: \"Actions\",\n      selector: (row) => (\n        <div className=\"flex flex-row justify-center flex-wrap gap-1\">\n          <button\n            className=\"btn btn-ghost-active btn-xs normal-case\"\n            onClick={() => document.getElementById(row.leave_id).showModal()}\n          >\n            Details\n          </button>\n\n          {/* Modal - Details */}\n          <dialog id={row.leave_id} className=\"modal text-left\">\n            <div className=\"modal-box\">\n              <form method=\"dialog\">\n                <button className=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">\n                  ✕\n                </button>\n              </form>\n\n              <h3 className=\"font-bold text-lg mb-5\">PTO Details</h3>\n\n              <div className=\"flex flex-col justify-center items-center\">\n                {row.emp_pic == \"\" || row.emp_pic == null ? (\n                  <div className=\"h-24 w-24 bg-gray-500 rounded-full flex justify-center items-center text-4xl text-white font-medium m-2\">\n                    {row.f_name.charAt(0) + row.s_name.charAt(0)}\n                  </div>\n                ) : (\n                  <img className=\"h-16 w-16 rounded-full m-2\" />\n                )}\n\n                <div className=\"text-center mb-7\">\n                  <h3 className=\"font-bold text-lg text-center\">\n                    {row.s_name + \", \" + row.f_name + \" \" + row.m_name}\n                  </h3>\n                  <span>{row.title}</span>\n                </div>\n\n                <div className=\"text-center\">\n                  <h3 className=\"font-semibold text-xl\">{row.leave_type}</h3>\n                  <h3 className=\"text-gray-600\">\n                    {row.leave_from === row.leave_to\n                      ? moment(row.leave_from).format(\"MMM. DD, YYYY\")\n                      : moment(row.leave_from).format(\"MMM. DD, YYYY\") +\n                        \"  to  \" +\n                        moment(row.leave_to).format(\"MMM. DD, YYYY\")}\n                  </h3>\n                </div>\n\n                <div className=\"mt-7 flex flex-col items-center gap-2\">\n                  <h3 className=\"italic text-gray-600\">\n                    Filed on {moment(row.date_filed).format(\"dddd\")} •{\" \"}\n                    {moment(row.date_filed).format(\"MMMM DD, YYYY\")}\n                  </h3>\n                  <div>{checkStatus(row.leave_status)}</div>\n                </div>\n              </div>\n\n              <div>\n                <h1 className=\"font-semibold mt-5\">Reason:</h1>\n\n                <div className=\"max-h-44 whitespace-normal\">\n                  <p className=\"justify-center text-justify\">\n                    {row.leave_reason == \"\" || row.leave_reason == null ? (\n                      <p className=\"italic text-gray-600\">\n                        No reason indicated.\n                      </p>\n                    ) : (\n                      <p>{row.leave_reason}</p>\n                    )}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end gap-2 mt-5\">\n                <button\n                  className=\"btn bg-green-600 text-white hover:bg-green-800 normal-case\"\n                  onClick={() => handleApproval(row.leave_id)}\n                >\n                  Approve\n                </button>\n                <button\n                  className=\"btn bg-red-600 text-white hover:bg-red-800 normal-case\"\n                  onClick={() => handleRejection(row.leave_id)}\n                >\n                  Decline\n                </button>\n              </div>\n            </div>\n          </dialog>\n\n          <button\n            className=\"btn btn-xs bg-lime-600 text-white hover:bg-green-800 normal-case\"\n            onClick={() => handleApproval(row.leave_id)}\n          >\n            Approve\n          </button>\n\n          <button\n            className=\"btn btn-xs bg-red-600 text-white hover:bg-red-800 normal-case\"\n            onClick={() => handleRejection(row.leave_id)}\n          >\n            Decline\n          </button>\n        </div>\n      ),\n    },\n  ];\n\n  if (leaves.length != 0) {\n    return (\n      <>\n        {/* PTO Notices */}\n        <div className=\"m-2 p-5 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-col justify-center align-middle\">\n          <div className=\"flex flex-row justify-between mb-4\">\n            <h1 className=\"text-lg font-semibold\">PTO Requests</h1>\n\n            <Link to=\"/leadPTORequests\">\n              <button className=\"btn btn-accent-active btn-sm normal-case\">\n                See All\n              </button>\n            </Link>\n          </div>\n\n          <div className=\"overflow-x-auto max-w-full\">\n            <DataTable\n              columns={columns}\n              data={leaves}\n              highlightOnHover\n            ></DataTable>\n          </div>\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <>\n        {/* PTO Notices */}\n        <div className=\"m-2 p-5 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-col justify-center align-middle\">\n          <h1 className=\"text-lg font-semibold\">PTO Requests</h1>\n\n          <div className=\"flex flex-col justify-center align-middle\">\n\n            <div className=\"flex flex-col items-center justify-center gap-4\">\n              <img src={link} className=\"h-48 w-48\"></img>\n\n              <h2 className=\"font-semibold\">No pending PTOs yet.</h2>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default ManagerPTORequestTableLimited;\n","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/Headings.jsx",["518"],[],"import react from \"react\";\n\nconst Headings = ({text}) => {\n\n    return (\n        <>\n            <h1 className=\"mx-2 text-3xl font-bold\">{text}</h1>\n        </>\n    )\n}\n\nexport default Headings","/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/LeadDirectory.jsx",["519"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/EmployeeDirectoryCard.jsx",["520","521","522"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/EditEmployee.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRFormEditEmployee.jsx",["523","524","525"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport ButtonBack from \"../universal/ButtonBack\";\nimport {useParams} from \"react-router-dom\"\n\nconst HRFormEditEmployee = () => {\n  const {emp_id} = useParams()\n  const [fetchData, setFetchData] = useState([]);\n\n  const [employeeInfo, setEmployeeInfo] = useState({\n    emp_num: \"\",\n    work_email: \"\",\n    f_name: \"\",\n    m_name: \"\",\n    s_name: \"\",\n    emp_role: \"\",\n    emp_pic: \"\",\n    personal_email: \"\",\n    contact_num: \"\",\n    dob: \"\",\n    p_address: \"\",\n    c_address: \"\",\n    date_hired: \"\",\n    date_regularization: \"\",\n    emp_status: \"\",\n    sex: \"\",\n    gender: \"\",\n    civil_status: \"\",\n    company_id: \"\",\n    div_id: \"\",\n    dept_id: \"\",\n    client_id: \"\",\n    position_id: \"\",\n  });\n\n  useEffect(() => {\n    const fetchOldData = async () => {\n      try {\n        const res = await axios.get(`http://localhost:6197/viewEmployee/${emp_id}`);\n        setFetchData(res.data);\n        setEmployeeInfo({...employeeInfo,  \n          emp_num: res.data[0].emp_num,\n          work_email: res.data[0].work_email,\n          f_name: res.data[0].f_name,\n          m_name: res.data[0].m_name,\n          s_name: res.data[0].s_name,\n          emp_role: res.data[0].emp_role,\n          emp_pic: res.data[0].emp_pic,\n          personal_email: res.data[0].personal_email,\n          contact_num: res.data[0].contact_num,\n          dob: res.data[0].dob,\n          p_address: res.data[0].p_address,\n          c_address: res.data[0].c_address,\n          date_hired: res.data[0].date_hired,\n          date_regularization: res.data[0].date_regularization,\n          emp_status: res.data[0].emp_status,\n          sex: res.data[0].sex,\n          gender: res.data[0].gender,\n          civil_status: res.data[0].civil_status,\n          company_id: res.data[0].company_id,\n          div_id: res.data[0].div_id,\n          dept_id: res.data[0].dept_id,\n          client_id: res.data[0].client_id,\n          position_id: res.data[0].position_id,})\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchOldData();\n  }, []);\n\n  \n  const [userReference, setUserReferences] = useState([]);\n\n  const[companies, setCompanies] = useState([])\n  const[divisions, setDivisions] = useState([])\n  const[departments, setDepartments] = useState([])\n  const[clients, setClients] = useState([])\n  const[positions, setPositions] = useState([])\n\n  useEffect(() => {\n    const fetchReferences = async () => {\n      try {\n        const res1 = await axios.get(\"http://localhost:6197/employeeslist\");\n        const res2 = await axios.get(\"http://localhost:6197/getAllCompanies\");\n        const res3 = await axios.get(\"http://localhost:6197/getAllDivisions\");\n        const res4 = await axios.get(\"http://localhost:6197/getAllDepartments\");\n        const res5 = await axios.get(\"http://localhost:6197/getAllClients\");\n        const res6 = await axios.get(\"http://localhost:6197/getAllPositions\");\n        setUserReferences(res1.data);\n        setCompanies(res2.data);\n        setDivisions(res3.data);\n        setDepartments(res4.data);\n        setClients(res5.data);\n        setPositions(res6.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchReferences();\n  }, []);\n\n  const isFound = () => {\n    userReference.some((element) => {\n      const email_box = document.getElementById(\"work_email\");\n      const emp_num_box = document.getElementById(\"emp_num\");\n\n      if (element.work_email === email_box.value) {\n        return (document.getElementById(\"work_email_label\").innerHTML =\n          \" * (Email already exists!)\");\n      } else {\n        document.getElementById(\"work_email_label\").innerHTML = \" *\";\n      }\n\n      if (element.emp_num === emp_num_box.value) {\n        return (document.getElementById(\"emp_num_label\").innerHTML =\n          \" * (Employee ID already exists!)\");\n      } else {\n        document.getElementById(\"emp_num_label\").innerHTML = \" *\";\n      }\n    });\n  };\n\n  const handleChange = (event) => {\n    setEmployeeInfo({...employeeInfo,[event.target.name]: [event.target.value]});\n    console.log(JSON.stringify(employeeInfo));\n    isFound();\n  }\n\n  const disableNext = () => {\n    var dateFrom = document.getElementById(\"date_hired\").value;\n\n    document.getElementById(\"date_regularization\").min =\n      moment(dateFrom).format(\"YYYY-MM-DD\");\n  };\n\n  const isSameAddress = () => {\n    if (document.getElementById(\"same_address_checkbox\").checked) {\n      document.getElementById(\"same_address_checkbox\").value =\n        document.getElementById(\"p_address\").value;\n      document.getElementById(\"c_address\").value =\n        document.getElementById(\"p_address\").value;\n      setEmployeeInfo({\n        ...employeeInfo,\n        c_address: document.getElementById(\"p_address\").value,\n      });\n    } else {\n      document.getElementById(\"c_address\").value = \"\";\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    editEmployee();\n  };\n\n  const editEmployee = () => {\n    axios\n      .post(`http://localhost:6197/editEmployee/${emp_id}`, employeeInfo)\n      .then((res) => console.log(JSON.stringify(employeeInfo)))\n      .catch((err) => console.log(err));\n\n    //window.location.reload();\n    alert(\"Successfully edited employee: \" + employeeInfo.emp_num);\n  };\n\n  return (\n    <>\n      <>\n        <div className=\"p-4 sm:ml-64 flex flex-col\">\n          <ButtonBack></ButtonBack>\n          <div className=\"m-2\">\n            <h1 className=\"text-3xl font-bold tracking-wide\">\n              Edit Employee\n            </h1>\n          </div>\n          <form onSubmit={handleSubmit}>\n            {/* Personal Information */}\n            <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col\">\n              <h1 className=\"font-bold\">Personal Information</h1>\n\n              <div className=\"flex flex-col md:flex-row\">\n                {/* First Name */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      First Name<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                \n                  <input\n                    name=\"f_name\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    maxlength=\"100\"\n                    value={employeeInfo.f_name}\n                    className=\"input input-bordered w-full \"\n                    required\n                  />\n                  \n                </label>\n                \n\n                {/* Middle Name */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Middle Name<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    name=\"m_name\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    maxlength=\"100\"\n                    value={employeeInfo.m_name}\n                    className=\"input input-bordered w-full \"\n                    required\n                  />\n                </label>\n\n                {/* Surname */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Surname<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    name=\"s_name\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    maxlength=\"100\"\n                    value={employeeInfo.s_name}\n                    className=\"input input-bordered w-full \"\n                    required\n                  />\n                </label>\n              </div>\n\n              <div className=\"flex flex-col md:flex-row\">\n                {/* Date of Birth */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Date of Birth<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    name=\"dob\"\n                    onChange={handleChange}\n                    type=\"date\"\n                    max={moment().format(\"YYYY-MM-DD\")}\n                    className=\"input input-bordered w-full\"\n                    value={moment(employeeInfo.dob).format(\"YYYY-MM-DD\")}\n                    required\n                  />\n                </label>\n\n                {/* Civil Status */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">Civil Status</span>\n                  </div>\n                  <select\n                    name=\"civil_status\"\n                    onChange={handleChange}\n                    className=\"select select-bordered w-full\"\n                    value={employeeInfo.civil_status}\n                    required\n                  >\n                    <option disabled selected>\n                      Select Civil Status\n                    </option>\n                    <option>Single</option>\n                    <option>Married</option>\n                    <option>Widowed</option>\n                  </select>\n                </label>\n\n                {/* Sex */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Sex<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <select\n                    name=\"sex\"\n                    onChange={handleChange}\n                    className=\"select select-bordered w-full\"\n                    value={employeeInfo.sex}\n                    required\n                  >\n                    <option disabled selected>\n                      Select Sex\n                    </option>\n                    <option>Male</option>\n                    <option>Female</option>\n                  </select>\n                </label>\n\n                {/* Gender */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">Gender</span>\n                  </div>\n                  <input\n                    name=\"gender\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    value={employeeInfo.gender}\n                    className=\"input input-bordered w-full\"\n                  />\n                </label>\n              </div>\n\n              <div className=\"flex flex-col md:flex-row\">\n                {/* Permanent Address */}\n                <label className=\"form-control w-full max-w-5xl md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Permanent Address<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    id=\"p_address\"\n                    name=\"p_address\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    value={employeeInfo.p_address}\n                    className=\"input input-bordered w-full\"\n                  />\n                </label>\n              </div>\n\n              <div className=\"flex flex-col md:flex-row\">\n                {/* Current Address */}\n                <label className=\"form-control w-full max-w-5xl md:mb-0 md:mr-4\">\n                  <div className=\"label pb-0\">\n                    <span className=\"label-text\">\n                      Current Address<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <div className=\"flex items-center \">\n                    {\" \"}\n                    <label className=\"label cursor-pointer\">\n                      <input\n                        id=\"same_address_checkbox\"\n                        name=\"c_address\"\n                        type=\"checkbox\"\n                        value=\"\"\n                        className=\"checkbox checkbox-sm\"\n                        onClick={isSameAddress}\n                        onChange={handleChange}\n                      />\n                      <span className=\"label-text ml-2\">\n                        {\" \"}\n                        Same as Permanent Address\n                      </span>\n                    </label>\n                  </div>\n                  <input\n                    id=\"c_address\"\n                    name=\"c_address\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    value={employeeInfo.c_address}\n                    className=\"input input-bordered w-full\"\n                  />\n                </label>\n              </div>\n            </div>\n\n            {/* Contact Information */}\n            <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col\">\n              <h1 className=\"font-bold\">Contact Information</h1>\n\n              <div className=\"flex flex-col md:flex-row\">\n                {/* Personal Email */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Personal Email<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    name=\"personal_email\"\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={employeeInfo.personal_email}\n                    className=\"input input-bordered w-full \"\n                  />\n                </label>\n                {/* Contact Number */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Contact Number<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    name=\"contact_num\"\n                    onChange={handleChange}\n                    type=\"number\"\n                    value={employeeInfo.contact_num}\n                    className=\"input input-bordered w-full \"\n                  />\n                </label>\n                <div></div>\n              </div>\n              <div className=\"divider\"></div>\n              <p className=\"font-semibold text-red-500 text-sm\">\n                Emergency Contact Information\n              </p>\n              <div className=\"flex flex-col md:flex-row\">\n                {/* Name */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">Name</span>\n                  </div>\n                  <input\n                    name=\"emergency_contact_name\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    value={employeeInfo.emergency_contact_name}\n                    className=\"input input-bordered w-full \"\n                  />\n                </label>\n\n                {/* Number */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">Contact Number</span>\n                  </div>\n                  <input\n                    name=\"emergency_contact_num\"\n                    onChange={handleChange}\n                    type=\"number\"\n                    value={employeeInfo.emergency_contact_num}\n                    className=\"input input-bordered w-full \"\n                  />\n                </label>\n              </div>\n            </div>\n\n            {/* Employee Information */}\n            <div className=\"m-2 p-3 border-2 border-gray-200 border-solid rounded-lg dark:border-gray-700 flex flex-1 flex-col\">\n              <h1 className=\"font-bold mb-2\">Employee Information</h1>\n\n              <div className=\"flex flex-col w-full md:flex-row\">\n                {/* Employee ID */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Employee ID\n                      <span id=\"emp_num_label\" className=\"text-red-500\">\n                        {\" \"}\n                        *\n                      </span>\n                    </span>\n                  </div>\n                  <div className=\"flex\">\n\n                    <select \n                    id=\"company_id\"\n                    name=\"company_id\"\n                    className=\"select select-bordered w-32\" \n                    onChange={handleChange}\n                    value={employeeInfo.company_id}\n                    required>\n                      <option disabled selected>Company</option>\n                      {companies.map((c) => (\n                        <option value={c.company_id}>{c.company_name}</option>\n                      ))}\n                    </select>\n\n                    <input\n                      id=\"emp_num\"\n                      name=\"emp_num\"\n                      onChange={handleChange}\n                      value={employeeInfo.emp_num}\n                      type=\"text\"\n                      maxlength=\"100\"\n                      className=\"input input-bordered w-full \"\n                    />\n                  </div>\n                </label>\n\n                {/* Work Email */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Work E-mail\n                      <span id=\"work_email_label\" className=\"text-red-500\">\n                        {\" \"}\n                        *\n                      </span>\n                    </span>\n                  </div>\n                  <input\n                    id=\"work_email\"\n                    name=\"work_email\"\n                    maxlength=\"100\"\n                    onChange={handleChange}\n                    value={employeeInfo.work_email}\n                    type=\"email\"\n                    className=\"input input-bordered w-full \"\n                    required\n                  />\n                </label>\n              </div>\n\n              <div className=\"flex flex-col w-full md:flex-row\">\n                {/* Division */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Division\n                      <span id=\"division_label\" className=\"text-red-500\">\n                        {\" \"}\n                        *\n                      </span>\n                    </span>\n                  </div>\n                  <select \n                  id=\"div_id\"\n                  name=\"div_id\"\n                  className=\"select select-bordered w-full \"\n                  onChange={handleChange}\n                  value={employeeInfo.div_id}\n                  required>\n                    <option disabled selected>Select Division</option>\n                    {divisions.map((di) => (\n                      <option value={di.div_id}>{di.div_name}</option>\n                    ))}\n                  </select>\n                </label>\n\n                {/* Department */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Department\n                      <span id=\"department_label\" className=\"text-red-500\">\n                        {\" \"}\n                        *\n                      </span>\n                    </span>\n                  </div>\n                  <select \n                  id=\"dept_id\"\n                  name=\"dept_id\"\n                  className=\"select select-bordered w-full \" \n                  onChange={handleChange}\n                  value={employeeInfo.dept_id}\n                  required>\n                    <option disabled selected>\n                      Select Department\n                    </option>\n                    {departments.map((de) => (\n                    <option value={de.dept_id}>{de.dept_name}</option>\n                    ))}\n                  </select>\n                </label>\n              </div>\n\n              <div className=\"flex flex-col w-full md:flex-row\">\n                {/* Client/Cluster */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Client/Cluster\n                      <span id=\"emp_num_label\" className=\"text-red-500\">\n                        {\" \"}\n                        *\n                      </span>\n                    </span>\n                  </div>\n                  <select \n                  id=\"client_id\"\n                  name=\"client_id\"\n                  className=\"select select-bordered w-full \" \n                  onChange={handleChange}\n                  value={employeeInfo.client_id}\n                  required>\n                    <option disabled selected>Select Client/Cluster</option>\n                    {clients.map((c) => (\n                      <option value={c.client_id}>{c.client_name}</option>\n                    ))}\n                  </select>\n                </label>\n\n                {/* Positions */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Position\n                      <span id=\"department_label\" className=\"text-red-500\">\n                        {\" \"}\n                        *\n                      </span>\n                    </span>\n                  </div>\n                  <select\n                  id=\"position_id\"\n                  name=\"position_id\"\n                  className=\"select select-bordered w-full \"\n                  onChange={handleChange} \n                  value={employeeInfo.position_id}\n                  required>\n                    <option disabled selected>\n                      Select Position\n                    </option>\n                    {positions.map((p) => (\n                    <option value={p.position_id}>{p.position_name}</option>\n                    ))}\n                  </select>\n                </label>\n              </div>\n\n              <div className=\"flex flex-col w-full md:flex-row\">\n                {/* Employment Status */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Employment Status<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <select\n                    name=\"emp_status\"\n                    onChange={handleChange}\n                    value={employeeInfo.emp_status}\n                    className=\"select select-bordered w-full \"\n                    required\n                  >\n                    <option disabled selected>\n                      Select Employment Status\n                    </option>\n                    <option>Probationary</option>\n                    <option>Regular</option>\n                    <option>Part-time</option>\n                  </select>\n                </label>\n\n                {/* Employee Role */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Employment Role<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <select\n                    name=\"emp_role\"\n                    onChange={handleChange}\n                    value={employeeInfo.emp_role}\n                    className=\"select select-bordered w-full \"\n                    required\n                  >\n                    <option disabled selected>\n                      Select Employment Role\n                    </option>\n                    <option value=\"3\">Manager</option>\n                    <option value=\"2\">Regular Employee</option>\n                    <option value=\"1\">HR</option>\n                    <option>Administrator</option>\n                  </select>\n                </label>\n              </div>\n\n              <div className=\"flex flex-col md:flex-row\">\n                {/* Date Hired */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Date Hired<span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    id=\"date_hired\"\n                    name=\"date_hired\"\n                    onChange={handleChange}\n                    onInput={disableNext}\n                    value={moment(employeeInfo.date_hired).format(\"YYYY-MM-DD\")}\n                    type=\"date\"\n                    className=\"input input-bordered w-full \"\n                  />\n                </label>\n\n                {/* Date of Regularization */}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">\n                      Date of Regularization\n                      <span className=\"text-red-500\"> *</span>\n                    </span>\n                  </div>\n                  <input\n                    id=\"date_regularization\"\n                    name=\"date_regularization\"\n                    onChange={handleChange}\n                    value={moment(employeeInfo.date_regularization).format(\"YYYY-MM-DD\")}\n                    type=\"date\"\n                    className=\"input input-bordered w-full \"\n                  />\n                </label>\n\n                {/* Date Separated*/}\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">Date Separated</span>\n                  </div>\n                  <input\n                    name=\"date_separated\"\n                    onChange={handleChange}\n                    value={moment(employeeInfo.date_separated).format(\"YYYY-MM-DD\")}\n                    type=\"date\"\n                    className=\"input input-bordered w-full \"\n                    disabled\n                  />\n                </label>\n              </div>\n\n              <div className=\"divider\"></div>\n\n              <div className=\"flex flex-col md:flex-row\">\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">Upload Profile Picture</span>\n                  </div>\n                  <input\n                    name=\"emp_pic\"\n                    onChange={handleChange}\n                    type=\"file\"\n                    className=\"file-input w-full max-w-xs\"\n                  />\n                </label>\n              </div>\n\n              <div className=\"divider\"></div>\n\n              {/* <div className=\"flex flex-col md:flex-row\">\n                \n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">SSS Number</span>\n                  </div>\n                  <input type=\"text\" className=\"input input-bordered w-full \" />\n                </label>\n\n                \n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">SSS Number</span>\n                  </div>\n                  <input type=\"text\" className=\"input input-bordered w-full\" />\n                </label>\n              </div> */}\n\n              {/* <div className=\"flex flex-col md:flex-row\">\n          \n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">HDMC Number</span>\n                  </div>\n                  <input type=\"text\" className=\"input input-bordered w-full \" />\n                </label>\n\n                <label className=\"form-control w-full max-w-md md:mb-0 md:mr-4\">\n                  <div className=\"label\">\n                    <span className=\"label-text\">TIN Number</span>\n                  </div>\n                  <input type=\"text\" className=\"input input-bordered w-full \" />\n                </label>\n              </div> */}\n            </div>\n            <div className=\"flex justify-end m-2\">\n              <input type=\"submit\" value=\"Submit\" className=\"btn\" />\n            </div>\n          </form>\n        </div>\n      </>\n    </>\n  );\n};\n\nexport default HRFormEditEmployee;\n","/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/EmployeeDirectoryComponent.jsx",["526","527","528","529","530","531"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/client/ClientEmployeeDirectory.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRDirectory.jsx",["532"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/DashBNumofLeavesToday.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRManage.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/hr/HRManageHoliday.jsx",["533"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/client/ClientAnnouncements.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/components/universal/BuildingComponent.jsx",["534"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/client/ClientAttendance.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/client/ClientTraining.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRAnnouncements.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRAttendance.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/hr/HRTraining.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/LeadAnnouncements.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/LeadAttendance.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/leads/LeadTraining.jsx",[],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/ForgotPassword.jsx",["535"],[],"/Users/marvinbautista/Desktop/hris/frontend/src/pages/ResetPasword.jsx",["536","537","538","539"],[],{"ruleId":"540","replacedBy":"541"},{"ruleId":"542","severity":1,"message":"543","line":65,"column":8,"nodeType":"544","endLine":65,"endColumn":10,"suggestions":"545"},{"ruleId":"546","severity":1,"message":"547","line":1,"column":26,"nodeType":"548","messageId":"549","endLine":1,"endColumn":35},{"ruleId":"546","severity":1,"message":"550","line":5,"column":20,"nodeType":"548","messageId":"549","endLine":5,"endColumn":29},{"ruleId":"551","severity":1,"message":"552","line":7,"column":5,"nodeType":"548","messageId":"553","endLine":7,"endColumn":11},{"ruleId":"546","severity":1,"message":"554","line":9,"column":11,"nodeType":"548","messageId":"549","endLine":9,"endColumn":24},{"ruleId":"546","severity":1,"message":"555","line":11,"column":8,"nodeType":"548","messageId":"549","endLine":11,"endColumn":23},{"ruleId":"546","severity":1,"message":"556","line":14,"column":8,"nodeType":"548","messageId":"549","endLine":14,"endColumn":28},{"ruleId":"546","severity":1,"message":"557","line":23,"column":10,"nodeType":"548","messageId":"549","endLine":23,"endColumn":15},{"ruleId":"558","severity":1,"message":"559","line":27,"column":34,"nodeType":"560","messageId":"561","endLine":27,"endColumn":36},{"ruleId":"542","severity":1,"message":"543","line":33,"column":6,"nodeType":"544","endLine":33,"endColumn":8,"suggestions":"562"},{"ruleId":"542","severity":1,"message":"563","line":45,"column":6,"nodeType":"544","endLine":45,"endColumn":8,"suggestions":"564"},{"ruleId":"546","severity":1,"message":"565","line":7,"column":11,"nodeType":"548","messageId":"549","endLine":7,"endColumn":19},{"ruleId":"540","replacedBy":"566"},{"ruleId":"546","severity":1,"message":"567","line":1,"column":16,"nodeType":"548","messageId":"549","endLine":1,"endColumn":24},{"ruleId":"546","severity":1,"message":"568","line":2,"column":23,"nodeType":"548","messageId":"549","endLine":2,"endColumn":24},{"ruleId":"558","severity":1,"message":"559","line":10,"column":37,"nodeType":"560","messageId":"561","endLine":10,"endColumn":39},{"ruleId":"542","severity":1,"message":"569","line":14,"column":7,"nodeType":"544","endLine":14,"endColumn":9,"suggestions":"570"},{"ruleId":"571","severity":1,"message":"572","line":41,"column":13,"nodeType":"573","endLine":41,"endColumn":143},{"ruleId":"571","severity":1,"message":"572","line":53,"column":13,"nodeType":"573","endLine":53,"endColumn":143},{"ruleId":"571","severity":1,"message":"572","line":62,"column":13,"nodeType":"573","endLine":62,"endColumn":143},{"ruleId":"571","severity":1,"message":"572","line":71,"column":13,"nodeType":"573","endLine":71,"endColumn":143},{"ruleId":"571","severity":1,"message":"572","line":80,"column":13,"nodeType":"573","endLine":80,"endColumn":143},{"ruleId":"571","severity":1,"message":"572","line":88,"column":13,"nodeType":"573","endLine":88,"endColumn":143},{"ruleId":"571","severity":1,"message":"572","line":96,"column":13,"nodeType":"573","endLine":96,"endColumn":143},{"ruleId":"571","severity":1,"message":"572","line":104,"column":13,"nodeType":"573","endLine":104,"endColumn":143},{"ruleId":"558","severity":1,"message":"559","line":45,"column":16,"nodeType":"560","messageId":"561","endLine":45,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":48,"column":16,"nodeType":"560","messageId":"561","endLine":48,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":51,"column":16,"nodeType":"560","messageId":"561","endLine":51,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":106,"column":30,"nodeType":"560","messageId":"561","endLine":106,"endColumn":32},{"ruleId":"574","severity":1,"message":"575","line":111,"column":19,"nodeType":"573","endLine":111,"endColumn":65},{"ruleId":"558","severity":1,"message":"559","line":146,"column":39,"nodeType":"560","messageId":"561","endLine":146,"endColumn":41},{"ruleId":"558","severity":1,"message":"576","line":192,"column":21,"nodeType":"560","messageId":"561","endLine":192,"endColumn":23},{"ruleId":"574","severity":1,"message":"575","line":221,"column":15,"nodeType":"573","endLine":221,"endColumn":75},{"ruleId":"546","severity":1,"message":"555","line":8,"column":8,"nodeType":"548","messageId":"549","endLine":8,"endColumn":23},{"ruleId":"546","severity":1,"message":"577","line":12,"column":8,"nodeType":"548","messageId":"549","endLine":12,"endColumn":19},{"ruleId":"546","severity":1,"message":"557","line":56,"column":11,"nodeType":"548","messageId":"549","endLine":56,"endColumn":16},{"ruleId":"546","severity":1,"message":"578","line":57,"column":11,"nodeType":"548","messageId":"549","endLine":57,"endColumn":24},{"ruleId":"546","severity":1,"message":"579","line":59,"column":11,"nodeType":"548","messageId":"549","endLine":59,"endColumn":18},{"ruleId":"546","severity":1,"message":"567","line":1,"column":17,"nodeType":"548","messageId":"549","endLine":1,"endColumn":25},{"ruleId":"542","severity":1,"message":"569","line":25,"column":6,"nodeType":"544","endLine":25,"endColumn":8,"suggestions":"580"},{"ruleId":"571","severity":1,"message":"572","line":73,"column":17,"nodeType":"573","endLine":76,"endColumn":18},{"ruleId":"571","severity":1,"message":"581","line":102,"column":17,"nodeType":"573","endLine":102,"endColumn":138},{"ruleId":"571","severity":1,"message":"572","line":127,"column":17,"nodeType":"573","endLine":130,"endColumn":18},{"ruleId":"571","severity":1,"message":"572","line":153,"column":17,"nodeType":"573","endLine":156,"endColumn":18},{"ruleId":"571","severity":1,"message":"572","line":178,"column":17,"nodeType":"573","endLine":181,"endColumn":18},{"ruleId":"571","severity":1,"message":"572","line":199,"column":17,"nodeType":"573","endLine":202,"endColumn":18},{"ruleId":"571","severity":1,"message":"572","line":226,"column":17,"nodeType":"573","endLine":229,"endColumn":18},{"ruleId":"571","severity":1,"message":"581","line":258,"column":15,"nodeType":"573","endLine":262,"endColumn":16},{"ruleId":"542","severity":1,"message":"582","line":64,"column":22,"nodeType":"583","endLine":64,"endColumn":47},{"ruleId":"558","severity":1,"message":"559","line":92,"column":25,"nodeType":"560","messageId":"561","endLine":92,"endColumn":27},{"ruleId":"558","severity":1,"message":"576","line":101,"column":30,"nodeType":"560","messageId":"561","endLine":101,"endColumn":32},{"ruleId":"558","severity":1,"message":"576","line":101,"column":61,"nodeType":"560","messageId":"561","endLine":101,"endColumn":63},{"ruleId":"546","severity":1,"message":"567","line":1,"column":17,"nodeType":"548","messageId":"549","endLine":1,"endColumn":25},{"ruleId":"546","severity":1,"message":"547","line":1,"column":27,"nodeType":"548","messageId":"549","endLine":1,"endColumn":36},{"ruleId":"571","severity":1,"message":"581","line":24,"column":9,"nodeType":"573","endLine":24,"endColumn":43},{"ruleId":"546","severity":1,"message":"584","line":7,"column":7,"nodeType":"548","messageId":"549","endLine":7,"endColumn":12},{"ruleId":"558","severity":1,"message":"559","line":24,"column":16,"nodeType":"560","messageId":"561","endLine":24,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":27,"column":16,"nodeType":"560","messageId":"561","endLine":27,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":30,"column":16,"nodeType":"560","messageId":"561","endLine":30,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":97,"column":30,"nodeType":"560","messageId":"561","endLine":97,"endColumn":32},{"ruleId":"574","severity":1,"message":"575","line":102,"column":19,"nodeType":"573","endLine":102,"endColumn":65},{"ruleId":"558","severity":1,"message":"559","line":137,"column":39,"nodeType":"560","messageId":"561","endLine":137,"endColumn":41},{"ruleId":"558","severity":1,"message":"559","line":154,"column":23,"nodeType":"560","messageId":"561","endLine":154,"endColumn":25},{"ruleId":"574","severity":1,"message":"575","line":162,"column":15,"nodeType":"573","endLine":162,"endColumn":53},{"ruleId":"542","severity":1,"message":"585","line":25,"column":6,"nodeType":"544","endLine":25,"endColumn":8,"suggestions":"586"},{"ruleId":"558","severity":1,"message":"559","line":40,"column":34,"nodeType":"560","messageId":"561","endLine":40,"endColumn":36},{"ruleId":"542","severity":1,"message":"569","line":45,"column":6,"nodeType":"544","endLine":45,"endColumn":8,"suggestions":"587"},{"ruleId":"571","severity":1,"message":"572","line":150,"column":17,"nodeType":"573","endLine":153,"endColumn":18},{"ruleId":"571","severity":1,"message":"572","line":176,"column":17,"nodeType":"573","endLine":179,"endColumn":18},{"ruleId":"571","severity":1,"message":"572","line":201,"column":17,"nodeType":"573","endLine":204,"endColumn":18},{"ruleId":"571","severity":1,"message":"572","line":220,"column":17,"nodeType":"573","endLine":223,"endColumn":18},{"ruleId":"571","severity":1,"message":"581","line":245,"column":15,"nodeType":"573","endLine":249,"endColumn":16},{"ruleId":"558","severity":1,"message":"559","line":33,"column":16,"nodeType":"560","messageId":"561","endLine":33,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":36,"column":16,"nodeType":"560","messageId":"561","endLine":36,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":39,"column":16,"nodeType":"560","messageId":"561","endLine":39,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":128,"column":30,"nodeType":"560","messageId":"561","endLine":128,"endColumn":32},{"ruleId":"574","severity":1,"message":"575","line":133,"column":19,"nodeType":"573","endLine":133,"endColumn":65},{"ruleId":"558","severity":1,"message":"559","line":168,"column":40,"nodeType":"560","messageId":"561","endLine":168,"endColumn":42},{"ruleId":"571","severity":1,"message":"581","line":189,"column":11,"nodeType":"573","endLine":189,"endColumn":83},{"ruleId":"571","severity":1,"message":"581","line":192,"column":11,"nodeType":"573","endLine":192,"endColumn":77},{"ruleId":"571","severity":1,"message":"581","line":195,"column":11,"nodeType":"573","endLine":195,"endColumn":76},{"ruleId":"571","severity":1,"message":"581","line":198,"column":11,"nodeType":"573","endLine":198,"endColumn":77},{"ruleId":"546","severity":1,"message":"584","line":7,"column":7,"nodeType":"548","messageId":"549","endLine":7,"endColumn":12},{"ruleId":"542","severity":1,"message":"569","line":25,"column":4,"nodeType":"544","endLine":25,"endColumn":6,"suggestions":"588"},{"ruleId":"571","severity":1,"message":"581","line":118,"column":15,"nodeType":"573","endLine":120,"endColumn":16},{"ruleId":"571","severity":1,"message":"581","line":148,"column":17,"nodeType":"573","endLine":150,"endColumn":18},{"ruleId":"571","severity":1,"message":"581","line":173,"column":17,"nodeType":"573","endLine":175,"endColumn":18},{"ruleId":"571","severity":1,"message":"581","line":197,"column":17,"nodeType":"573","endLine":200,"endColumn":18},{"ruleId":"571","severity":1,"message":"581","line":218,"column":15,"nodeType":"573","endLine":220,"endColumn":16},{"ruleId":"571","severity":1,"message":"581","line":242,"column":15,"nodeType":"573","endLine":245,"endColumn":16},{"ruleId":"546","severity":1,"message":"589","line":6,"column":10,"nodeType":"548","messageId":"549","endLine":6,"endColumn":19},{"ruleId":"542","severity":1,"message":"590","line":43,"column":6,"nodeType":"544","endLine":43,"endColumn":8,"suggestions":"591"},{"ruleId":"546","severity":1,"message":"547","line":1,"column":26,"nodeType":"548","messageId":"549","endLine":1,"endColumn":35},{"ruleId":"546","severity":1,"message":"592","line":3,"column":8,"nodeType":"548","messageId":"549","endLine":3,"endColumn":28},{"ruleId":"546","severity":1,"message":"593","line":4,"column":8,"nodeType":"548","messageId":"549","endLine":4,"endColumn":25},{"ruleId":"546","severity":1,"message":"594","line":5,"column":8,"nodeType":"548","messageId":"549","endLine":5,"endColumn":22},{"ruleId":"546","severity":1,"message":"595","line":6,"column":8,"nodeType":"548","messageId":"549","endLine":6,"endColumn":26},{"ruleId":"546","severity":1,"message":"596","line":10,"column":12,"nodeType":"548","messageId":"549","endLine":10,"endColumn":16},{"ruleId":"546","severity":1,"message":"597","line":10,"column":18,"nodeType":"548","messageId":"549","endLine":10,"endColumn":25},{"ruleId":"540","replacedBy":"598"},{"ruleId":"558","severity":1,"message":"559","line":62,"column":16,"nodeType":"560","messageId":"561","endLine":62,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":65,"column":16,"nodeType":"560","messageId":"561","endLine":65,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":68,"column":16,"nodeType":"560","messageId":"561","endLine":68,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":128,"column":30,"nodeType":"560","messageId":"561","endLine":128,"endColumn":32},{"ruleId":"574","severity":1,"message":"575","line":133,"column":19,"nodeType":"573","endLine":133,"endColumn":65},{"ruleId":"558","severity":1,"message":"559","line":168,"column":39,"nodeType":"560","messageId":"561","endLine":168,"endColumn":41},{"ruleId":"546","severity":1,"message":"565","line":15,"column":9,"nodeType":"548","messageId":"549","endLine":15,"endColumn":17},{"ruleId":"546","severity":1,"message":"599","line":19,"column":10,"nodeType":"548","messageId":"549","endLine":19,"endColumn":16},{"ruleId":"546","severity":1,"message":"600","line":20,"column":10,"nodeType":"548","messageId":"549","endLine":20,"endColumn":15},{"ruleId":"546","severity":1,"message":"601","line":20,"column":17,"nodeType":"548","messageId":"549","endLine":20,"endColumn":25},{"ruleId":"558","severity":1,"message":"559","line":49,"column":22,"nodeType":"560","messageId":"561","endLine":49,"endColumn":24},{"ruleId":"574","severity":1,"message":"575","line":49,"column":229,"nodeType":"573","endLine":50,"endColumn":29},{"ruleId":"571","severity":1,"message":"581","line":86,"column":9,"nodeType":"573","endLine":87,"endColumn":52},{"ruleId":"558","severity":1,"message":"559","line":30,"column":31,"nodeType":"560","messageId":"561","endLine":30,"endColumn":33},{"ruleId":"574","severity":1,"message":"575","line":35,"column":19,"nodeType":"573","endLine":38,"endColumn":21},{"ruleId":"602","severity":1,"message":"603","line":38,"column":34,"nodeType":"604","messageId":"605","endLine":38,"endColumn":36},{"ruleId":"546","severity":1,"message":"606","line":16,"column":15,"nodeType":"548","messageId":"549","endLine":16,"endColumn":19},{"ruleId":"558","severity":1,"message":"559","line":41,"column":16,"nodeType":"560","messageId":"561","endLine":41,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":44,"column":16,"nodeType":"560","messageId":"561","endLine":44,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":47,"column":16,"nodeType":"560","messageId":"561","endLine":47,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":108,"column":30,"nodeType":"560","messageId":"561","endLine":108,"endColumn":32},{"ruleId":"574","severity":1,"message":"575","line":113,"column":19,"nodeType":"573","endLine":113,"endColumn":65},{"ruleId":"558","severity":1,"message":"559","line":148,"column":39,"nodeType":"560","messageId":"561","endLine":148,"endColumn":41},{"ruleId":"542","severity":1,"message":"607","line":26,"column":6,"nodeType":"544","endLine":26,"endColumn":8,"suggestions":"608"},{"ruleId":"558","severity":1,"message":"559","line":44,"column":27,"nodeType":"560","messageId":"561","endLine":44,"endColumn":29},{"ruleId":"574","severity":1,"message":"575","line":49,"column":15,"nodeType":"573","endLine":52,"endColumn":17},{"ruleId":"571","severity":1,"message":"581","line":70,"column":15,"nodeType":"573","endLine":70,"endColumn":146},{"ruleId":"546","severity":1,"message":"547","line":1,"column":17,"nodeType":"548","messageId":"549","endLine":1,"endColumn":26},{"ruleId":"546","severity":1,"message":"567","line":1,"column":28,"nodeType":"548","messageId":"549","endLine":1,"endColumn":36},{"ruleId":"558","severity":1,"message":"559","line":44,"column":16,"nodeType":"560","messageId":"561","endLine":44,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":47,"column":16,"nodeType":"560","messageId":"561","endLine":47,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":50,"column":16,"nodeType":"560","messageId":"561","endLine":50,"endColumn":18},{"ruleId":"558","severity":1,"message":"559","line":105,"column":30,"nodeType":"560","messageId":"561","endLine":105,"endColumn":32},{"ruleId":"574","severity":1,"message":"575","line":110,"column":19,"nodeType":"573","endLine":110,"endColumn":65},{"ruleId":"558","severity":1,"message":"559","line":145,"column":39,"nodeType":"560","messageId":"561","endLine":145,"endColumn":41},{"ruleId":"558","severity":1,"message":"576","line":191,"column":21,"nodeType":"560","messageId":"561","endLine":191,"endColumn":23},{"ruleId":"574","severity":1,"message":"575","line":226,"column":15,"nodeType":"573","endLine":226,"endColumn":53},{"ruleId":"546","severity":1,"message":"609","line":1,"column":8,"nodeType":"548","messageId":"549","endLine":1,"endColumn":13},{"ruleId":"546","severity":1,"message":"610","line":2,"column":8,"nodeType":"548","messageId":"549","endLine":2,"endColumn":16},{"ruleId":"558","severity":1,"message":"559","line":15,"column":18,"nodeType":"560","messageId":"561","endLine":15,"endColumn":20},{"ruleId":"574","severity":1,"message":"575","line":20,"column":13,"nodeType":"573","endLine":20,"endColumn":67},{"ruleId":"611","severity":1,"message":"612","line":32,"column":9,"nodeType":"573","messageId":"613","endLine":32,"endColumn":149,"fix":"614"},{"ruleId":"546","severity":1,"message":"615","line":9,"column":10,"nodeType":"548","messageId":"549","endLine":9,"endColumn":19},{"ruleId":"542","severity":1,"message":"616","line":71,"column":6,"nodeType":"544","endLine":71,"endColumn":8,"suggestions":"617"},{"ruleId":"602","severity":1,"message":"603","line":105,"column":34,"nodeType":"604","messageId":"605","endLine":105,"endColumn":36},{"ruleId":"558","severity":1,"message":"559","line":36,"column":26,"nodeType":"560","messageId":"561","endLine":36,"endColumn":28},{"ruleId":"558","severity":1,"message":"576","line":38,"column":87,"nodeType":"560","messageId":"561","endLine":38,"endColumn":89},{"ruleId":"558","severity":1,"message":"559","line":38,"column":147,"nodeType":"560","messageId":"561","endLine":38,"endColumn":149},{"ruleId":"558","severity":1,"message":"559","line":42,"column":38,"nodeType":"560","messageId":"561","endLine":42,"endColumn":40},{"ruleId":"558","severity":1,"message":"559","line":56,"column":33,"nodeType":"560","messageId":"561","endLine":56,"endColumn":35},{"ruleId":"558","severity":1,"message":"576","line":56,"column":65,"nodeType":"560","messageId":"561","endLine":56,"endColumn":67},{"ruleId":"546","severity":1,"message":"610","line":2,"column":8,"nodeType":"548","messageId":"549","endLine":2,"endColumn":16},{"ruleId":"546","severity":1,"message":"565","line":10,"column":10,"nodeType":"548","messageId":"549","endLine":10,"endColumn":18},{"ruleId":"574","severity":1,"message":"575","line":8,"column":13,"nodeType":"573","endLine":8,"endColumn":48},{"ruleId":"574","severity":1,"message":"575","line":37,"column":9,"nodeType":"573","endLine":37,"endColumn":66},{"ruleId":"542","severity":1,"message":"618","line":47,"column":6,"nodeType":"544","endLine":47,"endColumn":8,"suggestions":"619"},{"ruleId":"558","severity":1,"message":"559","line":49,"column":12,"nodeType":"560","messageId":"561","endLine":49,"endColumn":14},{"ruleId":"574","severity":1,"message":"575","line":57,"column":11,"nodeType":"573","endLine":57,"endColumn":68},{"ruleId":"574","severity":1,"message":"575","line":94,"column":11,"nodeType":"573","endLine":94,"endColumn":67},"no-new-object",["620"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'BASE_URL' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["621"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setEmp_ID' is assigned a value but never used.","no-const-assign","'emp_id' is constant.","const","'fetchEmployee' is assigned a value but never used.","'DashBPTONotices' is defined but never used.","'DashBNumofLeaveToday' is defined but never used.","'users' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["622"],"React Hook useEffect has a missing dependency: 'BASE_URL'. Either include it or remove the dependency array.",["623"],"'navigate' is assigned a value but never used.",["620"],"'useState' is defined but never used.","'L' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["624"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Expected '!==' and instead saw '!='.","'DashBOwnPTO' is defined but never used.","'announcements' is assigned a value but never used.","'pleaves' is assigned a value but never used.",["625"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","Assignments to the 'ptoCredits' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["626"],["627"],["628"],"'employees' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'countInfo'. Either include it or remove the dependency array. You can also do a functional update 'setCountInfo(c => ...)' if you only need 'countInfo' in the 'setCountInfo' call.",["629"],"'DashBRemainingOffset' is defined but never used.","'DashBremainingPTO' is defined but never used.","'DashBBirthdays' is defined but never used.","'DashBAnniversaries' is defined but never used.","'ptos' is assigned a value but never used.","'setPtos' is assigned a value but never used.",["620"],"'filter' is assigned a value but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'res2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'emp_id' and 'ptoInfo'. Either include them or remove the dependency array. You can also do a functional update 'setPtoInfo(p => ...)' if you only need 'ptoInfo' in the 'setPtoInfo' call.",["630"],"'react' is defined but never used.","'Headings' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"631","text":"632"},"'fetchData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'emp_id' and 'employeeInfo'. Either include them or remove the dependency array. You can also do a functional update 'setEmployeeInfo(e => ...)' if you only need 'employeeInfo' in the 'setEmployeeInfo' call.",["633"],"React Hook useEffect has a missing dependency: 'user_key'. Either include it or remove the dependency array.",["634"],"no-object-constructor",{"desc":"635","fix":"636"},{"desc":"635","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"640","fix":"642"},{"desc":"643","fix":"644"},{"desc":"640","fix":"645"},{"desc":"640","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},[1294,1294]," rel=\"noreferrer\"",{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},"Update the dependencies array to be: [BASE_URL, navigate]",{"range":"655","text":"656"},{"range":"657","text":"656"},"Update the dependencies array to be: [BASE_URL]",{"range":"658","text":"659"},"Update the dependencies array to be: [navigate]",{"range":"660","text":"661"},{"range":"662","text":"661"},"Update the dependencies array to be: [count]",{"range":"663","text":"664"},{"range":"665","text":"661"},{"range":"666","text":"661"},"Update the dependencies array to be: [countInfo]",{"range":"667","text":"668"},"Update the dependencies array to be: [emp_id, ptoInfo]",{"range":"669","text":"670"},"Update the dependencies array to be: [emp_id, employeeInfo]",{"range":"671","text":"672"},"Update the dependencies array to be: [user_key]",{"range":"673","text":"674"},[2318,2320],"[BASE_URL, navigate]",[1344,1346],[1606,1608],"[BASE_URL]",[388,390],"[navigate]",[637,639],[674,676],"[count]",[1098,1100],[622,624],[1123,1125],"[countInfo]",[755,757],"[emp_id, ptoInfo]",[2126,2128],"[emp_id, employeeInfo]",[1157,1159],"[user_key]"]